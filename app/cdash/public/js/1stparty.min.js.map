{"version":3,"sources":["cdashIndexTable.js","cdashSortable.js","tabNavigation.js","linechart.js","bulletchart.js","cdash_angular.js","version.js","autocomplete.js","build.js","buildgroup.js","convertToNumber.js","daterange.js","onFinishRender.js","timeline.js","showEmptySubProjectsLast.js","terminalColors.js","anchors.js","apiLoader.js","comparators.js","filters.js","modal.js","multisort.js","renderTimer.js","buildProperties.js","buildSummary.js","compareCoverage.js","createProject.js","head.js","index.js","manageBuildGroup.js","manageMeasurements.js","manageOverview.js","manageSubProject.js","overview.js","queryTests.js","subproject.js","testDetails.js","testOverview.js","testSummary.js","user.js","userStatistics.js","viewBuildError.js","viewConfigure.js","viewDynamicAnalysis.js","viewDynamicAnalysisFile.js","viewNotes.js","viewProjects.js","viewSubProjects.js","viewTest.js","viewUpdate.js"],"names":["$","document","ready","trigger","getSortedElements","parent","positions","children","each","pos","id","this","attr","position","index","push","tab","url","location","toString","match","split","on","e","angular","element","window","hash","target","click","preventDefault","makeLineChart","elementName","inputData","project","anchor","sort","jQuery","chart","jqplot","axes","xaxis","renderer","DateAxisRenderer","tickOptions","formatString","highlighter","show","sizeAdjust","cursor","bind","ev","seriesIndex","pointIndex","data","d","Date","day","getDate","slice","month","getMonth","year","getFullYear","date","open","highest_value","_dataBounds","max","lowest_value","min","replot","makeBulletChart","chartName","avg","current","previous","chartHeight","nv","addGraph","models","bulletChart","options","margin","top","right","bottom","left","height","chartData","ranges","rangeLabels","measures","markers","d3","select","datum","call","CDash","module","constant","directive","$parse","scope","attrs","autocomplete","source","availableValues","VERSION","templateUrl","require","link","ngModel","$parsers","val","parseInt","$formatters","restrict","ngModelCtrl","datepicker","parseDate","format","value","error","begin","find","constrainInput","changeMonth","dateFormat","defaultDate","cdash","end","$timeout","$last","$evalAsync","onFinishRender","timelineController","$http","$scope","loading","query_parameters","$parent","projectname","filterdata","hasOwnProperty","buildgroup","method","params","then","s","timeline","finishSetup","undefined","length","nightly_start_times","Object","keys","time_to_date","map","x","Number","brushstart","start_brushing","style","brushend","find_closest_time","input_time","valid_times","mid","lo","hi","Math","floor","event","sourceEvent","extent","brush","new_extent","min_changed","max_changed","transition","duration","empty","computeSelectedDateRange","timechart","stackedAreaChart","y","interpolate","rightAlignYAxis","showControls","showLegend","showTotalInTooltip","useInteractiveGuideline","color","colors","xAxis","showMaxMin","timechart_selection","update","utils","windowResize","bbox","node","getBBox","text_element","append","text","label_width","width","remove","num_ticks","round","ceil","pop","tick_values","interval","i","tickValues","tickFormat","svg","xScale","extentstart","extentend","brush_element","selectAll","timestamps","indexOf","String","begin_date","idx","end_date","updateSelection","uri","host","pathname","projectname_encoded","controller","filter","subprojects","sortField","isArray","charAt","substring","subproject","nconfigureerror","nconfigurewarning","nconfigurepass","nbuilderror","nbuildwarning","nbuildpass","ntestfail","ntestnotrun","ntestpass","nonempty","present","missing","concat","input","pattern","replace","htmlEscape","ansiUp","AnsiUp","escape_for_html","ansi_to_html","$sce","trustAsHtml","service","$anchorScroll","$location","jumpToAnchor","elementId","factory","$rootScope","$window","renderTimer","loadPageData","controllerScope","endpoint","queryString","showfilters","initialRender","title","search","comparators","getComparators","array","symbol","bool","number","filters","toggle","str","href","getString","substr","getLabelString","n","field","escape","compare","filtercombine","$uibModal","showModal","modelId","okFn","template","parent_scope","size","success","$modal","animation","backdrop","$ctrl","ok","close","cancel","controllerAs","isFunction","result","updateOrderByFields","obj","$event","orderByFields","shiftKey","idx2","redirect","start","renderTime","generationtime","toFixed","BuildPropertiesController","$filter","apiLoader","modalSvc","multisort","builds","showDefects","defectsLoaded","selections","addSelection","propertykeys","properties","pagination","filteredTests","currentPage","maxSize","num_per_page_cookie","cookie","numPerPage","sort_cookie_value","chart_data","groups","addGroup","computeChartData","multiBarChart","rotateLabels","groupSpacing","keyword","yAxis","axisLabel","chart_selection","groupname","group","group_totals","defecttypes","defect_type","selected","defect_values","j","defective_builds","k","build","name","key","prettyname","values","defect_types","join","groupName","filterExpression","len","splice","matchingBuilds","remainingBuilds","keep_this_build","rerenderChart","unsplit","idx_to_remove","groupToRemove","idx_remain","buildids_to_move","len1","move_this_build","len2","len3","selection","comparator","property","applied","removeSelection","applySelection","user_clause","actual_code","b","eval","err","message","updateComparators","type","defect","currentDefect","toggleDefects","loadDefects","loadingDefects","buildids","parameters","buildid[]","defect[]","defectsError","defects","classifiersLoaded","loadingClassifiers","showClassifiers","pageChanged","toggleClassifiers","computeClassifiers","builds[]","classifiers","warning","filteredDefects","numDefectsPerPageChanged","expires","anchors","showTimeGraph","showErrorGraph","showWarningGraph","showTestGraph","showHistoryGraph","showNote","graphLoading","graphLoaded","graphData","graphRendered","time","errors","warnings","tests","noteStatus","toggleTimeGraph","renderGraph","loadGraphData","toggleErrorGraph","toggleWarningGraph","toggleTestGraph","toggleHistoryGraph","graphType","buildid","resp","buildtimes","builderrors","buildwarnings","testfailed","buildhistory","t","history_build","label","lines","points","mode","grid","backgroundColor","clickable","hoverable","hoverFill","hoverRadius","tickFormatter","v","axis","tickDecimals","minTickSize","plot","area","getAxes","x1","x2","clearSelection","setupGrid","draw","item","highlight","series","datapoint","yaxis","toggleNote","addNote","Status","AddNote","noteText","post","notes","note","sortCoverage","showfilters_toggle","Upload","changesmade","activeTab","disableTabs","startsWith","whichTab","edit","submitdisabled","tabs","disabled","active","bugtrackerexamples","Buganizer","GitHub","JIRA","bugtrackertypes","BugTrackerType","BugTrackerNewIssueUrl","issuecreation","showHelp","id_div","html","clearHelp","nextTab","Name","gotoTab","alert","previousTab","setTab","createProject","Submit","projectcreated","setLogo","updateProject","Update","projectupdated","startFade","logoFile","upload","logo","imageid","getTime","ImageId","logoid","deleteProject","confirm","changeViewerType","selectedViewer","CvsViewerType","CvsUrl","task","repositoryurlexample","addRepository","repositories","branch","username","password","addBlockedBuild","blockedbuild","AddBlockedBuild","blockedid","blockedbuilds","buildblocked","removeBlockedBuild","RemoveBlockedBuild","changeTrackerType","newissuehelp","FiltersController","filterdefinitions","buildduration","defaultvalue","buildgenerator","buildname","buildstamp","buildstarttime","buildtype","configureduration","configureerrors","configurewarnings","coveredlines","details","expected","filename","hascoverage","hasctestnotes","hasdynamicanalysis","hasusernotes","priority","revision","site","status","content","testname","testoutput","testsduration","testsfailed","testsnotrun","testspassed","testtimestatus","timestatus","totallines","uncoveredlines","updateduration","updatedfiles","comparisons","string","list","addFilter","block","previous_filter","filter_to_copy","removeFilter","changeFilter","found","applyFilters","createHyperlink","clearFilters","displayHyperlink","filterParams","origin","l","num_subfilters","prefix","encodeURIComponent","addFilterBlock","parent_filter","or_block","updateCombine","othercombine","lastIndexOf","filename_for_docs","forEach","subfilter","availablenoncontentfilters","availablefilters","availablefilter","object","filter_definition","page","$document","readCookie","nameEQ","ca","c","colorblind","cssfile","pl","decode","decodeURIComponent","query","exec","setupCalendar","onSelect","calendarSelected","maxDate","dateStr","dateValue","filterIdx","hide","toggleCalendar","hasClass","expecteds","dataField","showsettings","feed_cookie","showFeed","timer","refresh_cookie","autoRefresh","reload","showTimelineChart","timelinechart_cookie","query_sort_order","sort_order","cookie_value","sortDA","sortSubProjects","buildgroups","filteredBuilds","sorting_set","cookie_name","getCookieName","childview","numbuilderror","numconfigureerror","numtestfail","numtestnotrun","numconfigurewarning","numbuildwarning","hasnormalbuilds","hasparentbuilds","extrafilterurl","sharelabelfilters","advanced_cookie","show_time_columns","advancedview","showstarttime","showtimecolumns","showtesttime","extratestcolumns","showProcTime","numcolumns","displaylabels","feed_enabled","projectid","feed","setInterval","load","fadeIn","toggleFeed","toggleAdvancedView","toggleTimelineChart","URLencode","sStr","toggleAdminOptions","showAdminOptions","response","toggleBuildProblems","showProblems","getproblems","hasErrors","failingSince","failingDate","daysWithErrors","hasFailingTests","testsFailingSince","testsFailingDate","daysWithFailingTests","toggleExpectedInfo","showExpectedInfo","siteid","groupid","buildgroupid","currenttime","unixtimestamp","lastSubmission","lastSubmissionDate","daysSinceLastBuild","removeBuild","removeBuildFromScope","idx1","toggleDone","newDoneValue","done","toggleExpected","expectedandmissing","newExpectedValue","toggleAutoRefresh","moveToGroup","newgroupid","colorblind_toggle","numBuildsPerPageChanged","whichTable","normalBuild","numchildren","parentBuild","group_id","output","a","sortable","stop","ui","buildgrouptypes","buildType","createBuildGroup","newBuildGroup","newbuildgroup","buildgroup_error","delay","fadeOut","dynamics","updateBuildGroupOrder","newLayout","saveBuildGroup","summaryemail","deleteBuildGroup","moveBuilds","addWildcardRule","nameMatch","deleteWildcardRule","wildcard","wildcards","addDynamicRow","dynamic","rules","deleteDynamicRule","rule","measurements","dirty","newMeasurement","newmeasurement","summarypage","testpage","save","measurements_to_save","confirmDelete","measurement","removeMeasurement","id_to_remove","buildSortable","buildcolumns","staticSortable","staticrows","addBuildColumn","column","availablegroups","removeBuildColumn","addStaticRow","row","removeStaticRow","saveLayout","buildElements","staticElements","JSON","stringify","createSubProject","newSubProject","newsubproject","subproj","createGroup","newGroup","threshold","isDefault","newgroup","isdefault","is_default","default_group_id","updateGroup","coverage_threshold","deleteGroup","groupId","updateGroupOrder","measurementname","parse","categoryname","name_clean","chart_name","group_name","element_name","low","medium","satisfactory","showmatchingoutput","numTestsPerPageChanged","formSubmit","toggleShowMatchingOutput","dataLoaded","loadData","deleteSubProject","subprojectid","addDependency","dependency","subprojectId","dependencyid","available_dependencies","added","dependencies","removeDependency","dependencyId","removed","changeGroup","showgraph","showcommandline","rawdatalink","graph","graphSelection","display_graph","toggle_commandline","testid","test","query_params","graph_type","test_graph","testids","pan","interactive","zoom","amount","zoomRange","panRange","radius","ticks","fill","date_formatter","css","pageY","pageX","setup_compare","je_compare","caption","groupChanged","showpassedinitialvalue","showpassed","selectedGroup","graphurl","failureGraphUrl","testName","currentstarttime","resetZoom","deleteSchedule","job","removeschedule","jobschedule","generateToken","description","tokendescription","authtoken","token","copied","authtokens","copyTokenSuccess","showcheck","revokeToken","users","defaultSorting","buildErrors","setPage","pageNo","ViewNotesController","gotoNote","newHash","$q","canceler","defer","tests_to_load","tests[]","previous_builds","time_begin","time_end","timeout","promise","copy_test_details","displayhistory","displaysummary","sortByExtraMeasurement","cancelAjax","resolve","showGraph","toggleGraph","loadGraph","initializeGraph","extend"],"mappings":"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","file":"1stparty.min.js","sourcesContent":["$(document).ready(function() {\n  $(\"#indexTable\").trigger(\"appendCache\");\n});\n","// assumes the ids of the sortable child elements\n// are properly set\nfunction getSortedElements(parent) {\n  var positions = [];\n  $(parent).children().each(function() {\n    var pos = {};\n    pos.id = $(this).attr('id');\n    pos.position = $(this).index() + 1;\n    positions.push(pos);\n  });\n  return positions;\n}\n","$(document).ready(function () {\n  // Initialize tab navigation\n  $('#tabs a').tab();\n\n  // Enable link to tab\n  var url = document.location.toString();\n  if (url.match('#/')) {\n    $('.nav-tabs a[href=#'+url.split('#/')[1]+']').tab('show') ;\n  }\n\n  // Change hash for page-reload\n  $('.nav-tabs a').on('shown', function (e) {\n    angular.element(window).location.hash = e.target.hash;\n  })\n\n  $('#tabs a').click(function (e) {\n    e.preventDefault();\n    $(this).tab('show');\n  });\n});\n","function makeLineChart(elementName, inputData, project, anchor, sort) {\n  jQuery(function(){\n\n    // setup the chart\n    var chart = $.jqplot (elementName, [inputData], {\n      axes:{\n        xaxis:{\n          renderer: $.jqplot.DateAxisRenderer,\n          tickOptions: {formatString:'%b %#d'},\n        }\n      },\n      highlighter: {\n        show: true,\n        sizeAdjust: 7.5\n      },\n      cursor: {\n        show: false\n      }\n    });\n\n    $(\"#\" + elementName).bind('jqplotDataClick',\n      function (ev, seriesIndex, pointIndex, data) {\n        // Get the date for this data point in the format that CDash expects.\n        var d = new Date(data[0]);\n        var day = (\"0\" + d.getDate()).slice(-2);\n        var month = (\"0\" + (d.getMonth() + 1)).slice(-2);\n        var year = d.getFullYear();\n        var date = year + \"-\" + month + \"-\" + day;\n\n        // Redirect the user to this project's index page for the given date.\n        var url = \"index.php?project=\" + project + \"&date=\" + date;\n        if (sort) {\n          url += \"&sort=\" + sort;\n        }\n        if (anchor) {\n          url += \"##\" + anchor;\n        }\n        window.open(url, '_blank');\n      }\n    );\n\n    // Change X axis to tightly fit the data.\n    var highest_value = chart.axes.xaxis._dataBounds.max;\n    var lowest_value = chart.axes.xaxis._dataBounds.min;\n    if (highest_value > lowest_value) {\n      chart.axes.xaxis.max = highest_value;\n      chart.axes.xaxis.min = lowest_value;\n      chart.replot();\n    }\n  });\n}\n","function makeBulletChart(chartName, elementName, min, avg, max, current,\n                         previous, chartHeight) {\n  // note that chartHeight is just for the chart itself (not the labels)\n  var chart;\n  nv.addGraph(function() {\n    chart = nv.models.bulletChart()\n    .options({\n      margin: {top: 33, right: 10, bottom: 5, left: 5},\n      height: chartHeight + 33\n    });\n\n    var chartData = {\n      \"ranges\": [min, avg, max],\n      \"rangeLabels\": [\"Low\", \"Medium\", \"Satisfactory\"],\n      \"measures\": [current],\n      \"markers\": [previous],\n      };\n\n    // This chart doesn't render without the marker, so instead of\n    // leaving it off, we just relabel it to \"Current\" instead of\n    // the default label of \"Previous\".\n    if (previous == current) {\n      chartData[\"markerLabels\"] = [\"Current\"];\n    }\n\n    d3.select(elementName)\n      .datum(chartData)\n      .call(chart);\n    return chart;\n  });\n}\n","var CDash = angular\n.module('CDash', [\n    'angular-clipboard',\n    'ngAnimate',\n    'ngFileUpload',\n    'ui.sortable',\n    'ui.bootstrap'\n    ]);\n","angular.module('CDash').constant('VERSION', '1568308254093');","CDash.directive('autoComplete', function($parse) {\n  return function(scope, element, attrs) {\n    element.autocomplete({\n      source: $parse(attrs.availableValues)(scope)\n    });\n  };\n});\n","CDash.directive('build', function (VERSION) {\n  return {\n    templateUrl: 'build/views/partials/build_' + VERSION + '.html'\n  }\n});\n","CDash.directive('buildgroup', function (VERSION) {\n  return {\n    templateUrl: 'build/views/partials/buildgroup_' + VERSION + '.html'\n  }\n});\n","CDash.directive('convertToNumber', function() {\n  return {\n    require: 'ngModel',\n    link: function(scope, element, attrs, ngModel) {\n      ngModel.$parsers.push(function(val) {\n        return parseInt(val, 10);\n      });\n      ngModel.$formatters.push(function(val) {\n        return '' + val;\n      });\n    }\n  };\n});\n","CDash.directive('daterange', function (VERSION) {\n  return {\n    restrict: 'A',\n    templateUrl: 'build/views/partials/daterange_' + VERSION + '.html',\n    link: function (scope, element, attrs, ngModelCtrl) {\n      var format = \"yy-mm-dd\",\n\n      begin = element.find(\"#begin\").datepicker({\n        constrainInput: false,\n        changeMonth: true,\n        dateFormat: format,\n        defaultDate: scope.cdash.date\n      }).on( \"change\", function() {\n        var date = getDate(this);\n        end.datepicker(\"option\", \"minDate\", date);\n      }),\n\n      end = element.find(\"#end\").datepicker({\n        constrainInput: false,\n        changeMonth: true,\n        dateFormat: format,\n        defaultDate: scope.cdash.date\n      }).on( \"change\", function() {\n        var date = getDate(this);\n        begin.datepicker(\"option\", \"maxDate\", date);\n      });\n\n      function getDate(element) {\n        var date;\n        try {\n          date = $.datepicker.parseDate(format, element.value);\n        } catch( error ) {\n          date = null;\n        }\n        return date;\n      }\n    }\n  };\n});\n","CDash.directive('onFinishRender', function ($timeout) {\n  return {\n    restrict: 'A',\n    link: function (scope, element, attr) {\n      if (scope.$last === true) {\n        scope.$evalAsync(attr.onFinishRender);\n      }\n    }\n  }\n});\n","var timelineController =\n  function TimelineChartController($http, $scope) {\n    $scope.loading = true;\n\n    query_parameters = {\n      project: $scope.$parent.cdash.projectname,\n      filterdata: $scope.$parent.cdash.filterdata\n    };\n    if ($scope.$parent.cdash.hasOwnProperty('begin') &&\n        $scope.$parent.cdash.hasOwnProperty('end')) {\n      query_parameters.begin = $scope.$parent.cdash.begin;\n      query_parameters.end = $scope.$parent.cdash.end;\n    } else {\n      query_parameters.date = $scope.$parent.cdash.date;\n    }\n    if ($scope.$parent.cdash.hasOwnProperty('buildgroup')) {\n      $scope.buildgroup = $scope.$parent.cdash.buildgroup;\n      query_parameters.buildgroup = $scope.buildgroup;\n    }\n    $http({\n      url: 'api/v1/timeline.php',\n      method: 'GET',\n      params: query_parameters\n    }).then(function success(s) {\n      $scope.timeline = s.data;\n      $scope.error = false;\n      $scope.finishSetup();\n    }, function error(e) {\n      $scope.error = e.data;\n    }).finally(function() {\n      $scope.loading = false;\n    });\n\n\n    $scope.finishSetup = function() {\n      if ($scope.timeline === undefined || $scope.timeline.length === 0) {\n        return;\n      }\n\n      // Construct an array of timestamps corresponding to our nightly start times.\n      var nightly_start_times = Object.keys($scope.timeline.time_to_date);\n      // Convert from string to int.\n      $scope.nightly_start_times = nightly_start_times.map(function (x) {\n        return Number(x);\n      });\n\n      nv.addGraph(function() {\n        $scope.timechart = nv.models.stackedAreaChart()\n          .x(function(d) { return d[0] })\n          .y(function(d) { return d[1] })\n          .interpolate(\"step-after\")\n          .margin({top: 30, right: 60, bottom: 30, left: 60})\n          .rightAlignYAxis(false)\n          .showControls(false)\n          .showLegend(true)\n          .showTotalInTooltip(false)\n          .useInteractiveGuideline(true);\n\n        if ($scope.timeline.hasOwnProperty('colors')) {\n          $scope.timechart.color($scope.timeline.colors);\n        }\n\n        $scope.timechart.xAxis.showMaxMin(false);\n        $scope.timechart_selection = d3.select('#timechart svg').datum($scope.timeline.data);\n        $scope.timechart_selection.call($scope.timechart);\n\n        $scope.timechart_selection\n        .select(\".nv-axislabel\")\n        .style('font-size', '16')\n        .style('font-weight', 'bold');\n\n        $scope.timechart.update();\n        nv.utils.windowResize($scope.timechart.update);\n\n        // Calculate how many ticks can comfortably fit on our X-axis.\n        var bbox = d3.select(\".nv-stackedAreaChart g rect\").node().getBBox();\n        var text_element = $scope.timechart_selection\n        .append('text')\n        .attr(\"class\", \"nvd3\")\n        .text('2999-12-31')\n        .style('visibility', 'hidden');\n        var label_width = text_element.node().getBBox().width;\n        text_element.remove();\n        var num_ticks = Math.floor(Math.round(bbox.width) / (Math.ceil(label_width) * 2));\n\n        // Extract that many evenly spaced dates for our X-axis tick values.\n        var nightly_start_times = $scope.nightly_start_times.slice(0);\n        // Don't show the final X-axis tick because it represents one day\n        // past our specified range.\n        nightly_start_times.pop();\n        if (nightly_start_times.length > num_ticks) {\n          var tick_values = [nightly_start_times[0]];\n          var interval = nightly_start_times.length / num_ticks;\n          for (var i = 1; i < num_ticks; i++) {\n            tick_values.push(nightly_start_times[Math.round(i * interval)]);\n          }\n        } else {\n          var tick_values = nightly_start_times;\n        }\n\n        // Format x-axis labels as dates.\n        $scope.timechart.xAxis\n        .showMaxMin(false)\n        .tickValues(tick_values)\n        .tickFormat(function(d) {\n          return $scope.timeline.time_to_date[d];\n        });\n        $scope.timechart.update();\n\n        // Use d3.brush to allow the user to select a date range.\n        $scope.timeline.brush = d3.svg.brush()\n        .x($scope.timechart.xScale())\n        .extent([$scope.timeline.extentstart, $scope.timeline.extentend])\n        .on(\"brushstart\", brushstart)\n        .on(\"brushend\", brushend);\n        $scope.start_brushing = true;\n\n        var brush_element = $scope.timechart_selection\n        .select(\".nv-areaWrap\")\n        .append(\"g\")\n        .attr(\"class\", \"brush\")\n        .call($scope.timeline.brush)\n        .selectAll('rect')\n        .attr('height', bbox.height)\n        .attr('fill-opacity', '.125')\n        .attr('stroke', '#fff');\n\n        // Remove the brush background so mouseover events get passed through\n        // to the underlying chart. This makes it so our tooltips still work.\n        brush_element.select(\".background\").remove();\n\n        $scope.computeSelectedDateRange();\n\n        function brushstart() {\n          // Work around a d3 bug where brushstart() gets called before\n          // AND after brushend().\n          if (!$scope.start_brushing) {\n            $scope.start_brushing = true;\n            return;\n          }\n\n          // Hide tooltips while moving the brush.\n          d3.select('.nvtooltip').style('display', 'none');\n          $scope.start_brushing = false;\n        }\n\n        // Snap to day boundaries.\n        function brushend() {\n          if (!d3.event.sourceEvent) return; // only transition after input\n\n          // Use binary search to round to the nearest day.\n          function find_closest_time (input_time, valid_times) {\n            var mid;\n            var lo = 0;\n            var hi = valid_times.length - 1;\n            while (hi - lo > 1) {\n              mid = Math.floor ((lo + hi) / 2);\n              if (valid_times[mid] < input_time) {\n                lo = mid;\n              } else {\n                hi = mid;\n              }\n            }\n            if (input_time - valid_times[lo] <= valid_times[hi] - input_time) {\n              return valid_times[lo];\n            }\n            return valid_times[hi];\n          }\n          var extent = $scope.timeline.brush.extent();\n          var new_extent = [];\n          new_extent[0] = find_closest_time(extent[0], $scope.nightly_start_times);\n          new_extent[1] = find_closest_time(extent[1], $scope.nightly_start_times);\n\n          // Don't go out of bounds.\n          if (new_extent[0] < $scope.timeline.min) {\n            new_extent[0] = $scope.timeline.min;\n          }\n          if (new_extent[1] > $scope.timeline.max) {\n            new_extent[1] = $scope.timeline.max;\n          }\n\n          var min_changed = extent[0] != new_extent[0];\n          var max_changed = extent[1] != new_extent[1];\n          // Don't collapse the extent down to nothing.\n          // At minimum it should span a single testing day.\n          if (new_extent[0] == new_extent[1]) {\n            if (min_changed) {\n              new_extent[0] = new_extent[1] - 1000 * 3600 * 24;\n            } else if (max_changed) {\n              new_extent[1] = new_extent[0] + 1000 * 3600 * 24;\n            }\n          }\n\n          // Smoothly move the brush if necessary.\n          if (new_extent[0] != extent[0] || new_extent[1] != extent[1]) {\n            d3.select(this).transition()\n              .duration($scope.timeline.brush.empty() ? 0 : 750)\n              .call($scope.timeline.brush.extent(new_extent))\n              .call($scope.timeline.brush.event);\n          }\n\n          $scope.computeSelectedDateRange();\n          d3.select('.nvtooltip').style('display', 'block');\n        }\n\n        return $scope.timechart;\n      });\n    };\n\n    $scope.computeSelectedDateRange = function() {\n      // Record our currently selected time range in terms of testing days.\n      var extent = $scope.timeline.brush.extent();\n      var timestamps = Object.keys($scope.timeline.time_to_date);\n\n      // extent[0] and extent[1] should both already be set to timestamps that\n      // represent testing day boundaries.  These boundaries are the keys of our\n      // time_to_date object.  If our extent is found to hold invalid values\n      // we record the beginning and/or end of our testing date range instead.\n      if (timestamps.indexOf(String(extent[0])) === -1) {\n        $scope.$parent.cdash.begin_date = $scope.timeline.time_to_date[Number(timestamps[0])];\n      } else {\n        $scope.$parent.cdash.begin_date = $scope.timeline.time_to_date[extent[0]];\n      }\n\n      // The end of our range is pointing at the end of the testing day.\n      // We want to report the beginning of this day instead, so we grab the date\n      // corresponding to the previous timestamp.\n      idx = timestamps.indexOf(String(extent[1]));\n      if (idx > 0) {\n        $scope.$parent.cdash.end_date = $scope.timeline.time_to_date[timestamps[idx - 1]];\n      } else {\n        $scope.$parent.cdash.end_date = $scope.timeline.time_to_date[Number(timestamps[timestamps.length - 1])];\n      }\n    };\n\n    $scope.updateSelection = function() {\n      // Defer to the parent controller's implementation of this function\n      // if one exists.\n      if (typeof $scope.$parent.updateSelection === 'function') {\n        return $scope.$parent.updateSelection();\n      }\n\n      var uri = '//' + location.host + location.pathname + '?project=' + $scope.cdash.projectname_encoded;\n\n      if ($scope.hasOwnProperty('buildgroup')) {\n        uri += '&buildgroup=' + $scope.buildgroup;\n      }\n\n      // Include date range from time chart.\n      if ($scope.cdash.begin_date == $scope.cdash.end_date) {\n        uri += '&date=' + $scope.cdash.begin_date;\n      } else {\n        uri += '&begin=' + $scope.cdash.begin_date + '&end=' + $scope.cdash.end_date;\n      }\n\n      window.location = uri;\n    };\n};\n\nCDash.directive('timeline', function (VERSION) {\n  return {\n    restrict: 'A',\n    templateUrl: 'build/views/partials/timeline_' + VERSION + '.html',\n    controller: timelineController\n  };\n});\n","// Keep subprojects with missing fields at the bottom of the list.\n// Shared between index.html & viewSubProjects.html\nCDash.filter(\"showEmptySubProjectsLast\", function () {\n  return function (subprojects, sortField) {\n    if (!angular.isArray(subprojects)) return;\n    if (!sortField) return subprojects;\n    if (angular.isArray(sortField)) {\n      if (sortField.length < 1) {\n        return subprojects;\n      }\n      sortField = sortField[0];\n    }\n    if (sortField.charAt(0) == '-') {\n      sortField = sortField.substring(1);\n    }\n\n    // First weed out the subprojects that are completely empty.\n    // These will stay at the bottom of the table.\n    var empty = subprojects.filter(function (subproject) {\n      return (subproject.nconfigureerror == 0 && subproject.nconfigurewarning == 0 && subproject.nconfigurepass == 0 && subproject.nbuilderror == 0 && subproject.nbuildwarning == 0 && subproject.nbuildpass == 0 && subproject.ntestfail == 0 && subproject.ntestnotrun == 0 && subproject.ntestpass == 0);\n    });\n\n    var nonempty = subprojects.filter(function (subproject) {\n      return (subproject.nconfigureerror != 0 || subproject.nconfigurewarning != 0 || subproject.nconfigurepass != 0 || subproject.nbuilderror != 0 || subproject.nbuildwarning != 0 || subproject.nbuildpass != 0 || subproject.ntestfail != 0 || subproject.ntestnotrun != 0 || subproject.ntestpass != 0);\n    });\n\n    switch (sortField) {\n      case 'name':\n      case 'lastsubmission':\n      default:\n        return subprojects;\n        break;\n\n      case 'nconfigureerror':\n      case 'nconfigurewarning':\n      case 'nconfigurepass':\n        var present = nonempty.filter(function (subproject) {\n          return (subproject.nconfigureerror != 0 || subproject.nconfigurewarning != 0 || subproject.nconfigurepass != 0);\n        });\n        var missing = nonempty.filter(function (subproject) {\n          return (subproject.nconfigureerror == 0 && subproject.nconfigurewarning == 0 && subproject.nconfigurepass == 0);\n        });\n        present = present.concat(missing);\n        break;\n\n      case 'nbuilderror':\n      case 'nbuildwarning':\n      case 'nbuildpass':\n        var present = nonempty.filter(function (subproject) {\n          return (subproject.nbuilderror != 0 || subproject.nbuildwarning != 0 || subproject.nbuildpass != 0);\n        });\n        var missing = nonempty.filter(function (subproject) {\n          return (subproject.nbuilderror == 0 && subproject.nbuildwarning == 0 && subproject.nbuildpass == 0);\n        });\n        present = present.concat(missing);\n        break;\n\n      case 'ntestfail':\n      case 'ntestnotrun':\n      case 'ntestpass':\n        var present = nonempty.filter(function (subproject) {\n          return (subproject.ntestfail != 0 || subproject.ntestnotrun != 0 || subproject.ntestpass != 0);\n        });\n        var missing = nonempty.filter(function (subproject) {\n          return (subproject.ntestfail == 0 && subproject.ntestnotrun == 0 && subproject.ntestpass == 0);\n        });\n        present = present.concat(missing);\n        break;\n    }\n\n    return present.concat(empty);\n  };\n});\n\n","CDash.filter('ctestNonXmlCharEscape', function() {\n  return function(input) {\n    var pattern = /\\[NON-XML-CHAR-0x1B\\]/g;\n    return input.replace(pattern, '\\x1B');\n  };\n})\n.filter('terminalColors', function() {\n  return function(input, htmlEscape) {\n    var ansiUp = new AnsiUp;\n    if (htmlEscape !== undefined) {\n      ansiUp.escape_for_html = htmlEscape;\n    }\n    return ansiUp.ansi_to_html(input);\n  };\n})\n.filter('trustAsHtml', ['$sce', function($sce) {\n  return function(input) {\n    return $sce.trustAsHtml(input);\n  };\n}]);\n","// Handle intra-page links.\nCDash.service('anchors', function ($anchorScroll, $location, $timeout) {\n  this.jumpToAnchor = function(elementId) {\n    $timeout(function() {\n      $location.hash(elementId);\n      $anchorScroll();\n    });\n  };\n});\n","// Encapsulate common code involved in loading our page data from the API.\nCDash.factory('apiLoader', function ($http, $rootScope, $window, renderTimer) {\n  var loadPageData = function(controllerScope, endpoint) {\n    controllerScope.loading = true;\n\n    $http({\n      url: endpoint,\n      method: 'GET',\n      params: $rootScope.queryString\n    }).then(function success(s) {\n      var cdash = s.data;\n\n      // Check if we should display filters.\n      if (cdash.filterdata && cdash.filterdata.showfilters == 1) {\n        controllerScope.showfilters = true;\n      }\n\n      // Time how long it takes to render the page.\n      renderTimer.initialRender(controllerScope, cdash);\n\n      // Set title in root scope so the head controller can see it.\n      $rootScope['title'] = cdash.title;\n\n      // Save a copy of where we loaded this data from.\n      // This is used to link the user to a copy of the data in JSON format.\n      controllerScope.cdash.endpoint = endpoint + $window.location.search;\n\n      // Do any subsequent setup required for this particular controller.\n      if (typeof controllerScope.finishSetup === \"function\") {\n        controllerScope.finishSetup();\n      }\n    }, function error(e) {\n      controllerScope.cdash = e.data;\n    }).finally(function() {\n      controllerScope.loading = false;\n    });\n  };\n  return {\n    loadPageData: loadPageData\n  };\n});\n","// How to compare different types of data.\nangular\n  .module('CDash')\n  .factory('comparators', comparators);\n\nfunction comparators() {\n  return {\n    getComparators : function() {\n      return {\n        array:\n          [\n            {\n              pos: 1,\n              symbol: \"in\",\n              text: \"contains\"\n            },\n            {\n              pos: 2,\n              symbol: \"not in\",\n              text: \"does not contain\"\n            }\n          ],\n        bool:\n          [\n            {\n              pos: 1,\n              symbol: \"==\",\n              text: \"is\"\n            },\n            {\n              pos: 2,\n              symbol: \"!=\",\n              text: \"is not\"\n            }\n          ],\n        number:\n          [\n            {\n              pos: 1,\n              symbol: \"<\",\n              text: \"is less than\"\n            },\n            {\n              pos: 2,\n              symbol: \">\",\n              text: \"is greater than\"\n            },\n            {\n              pos: 3,\n              symbol: \"==\",\n              text: \"equals\"\n            }\n          ]\n      };\n    }\n  }\n}\n","angular\n    .module('CDash')\n    .controller('FiltersController', FiltersController);\n\nfunction FiltersController($scope, $rootScope, $http, $timeout) {\n\n  // The different type of data filters that we support.\n  $scope.filterdefinitions = {\n    \"buildduration\": {\n      \"text\": \"Build Duration\",\n      \"type\": \"number\",\n      \"defaultvalue\": 0\n    },\n    \"builderrors\": {\n      \"text\": \"Build Errors\",\n      \"type\": \"number\",\n      \"defaultvalue\": 0\n    },\n    \"buildgenerator\": {\n      \"text\": \"Submission Client\",\n      \"type\": \"string\",\n      \"defaultvalue\": \"2.8\"\n    },\n    \"buildname\": {\n      \"text\": \"Build Name\",\n      \"type\": \"string\",\n      \"defaultvalue\": \"\"\n    },\n    \"buildstamp\": {\n      \"text\": \"Build Stamp\",\n      \"type\": \"string\",\n      \"defaultvalue\": \"\"\n    },\n    \"buildstarttime\": {\n      \"text\": \"Build Start Time\",\n      \"type\": \"date\",\n      \"defaultvalue\": \"\"\n    },\n    \"buildtype\": {\n      \"text\": \"Build Type\",\n      \"type\": \"string\",\n      \"defaultvalue\": \"Nightly\"\n    },\n    \"buildwarnings\": {\n      \"text\": \"Build Warnings\",\n      \"type\": \"number\",\n      \"defaultvalue\": 0\n    },\n    \"configureduration\": {\n      \"text\": \"Configure Duration\",\n      \"type\": \"number\",\n      \"defaultvalue\": 0\n    },\n    \"configureerrors\": {\n      \"text\": \"Configure Errors\",\n      \"type\": \"number\",\n      \"defaultvalue\": 0\n    },\n    \"configurewarnings\": {\n      \"text\": \"Configure Warnings\",\n      \"type\": \"number\",\n      \"defaultvalue\": 0\n    },\n    \"coveredlines\": {\n      \"text\": \"Covered Lines\",\n      \"type\": \"number\",\n      \"defaultvalue\": 0\n    },\n    \"details\": {\n      \"text\": \"Details\",\n      \"type\": \"string\",\n      \"defaultvalue\": \"\"\n    },\n    \"expected\": {\n      \"text\": \"Expected\",\n      \"type\": \"bool\",\n      \"defaultvalue\": \"\"\n    },\n    \"filename\": {\n      \"text\": \"Filename\",\n      \"type\": \"string\",\n      \"defaultvalue\": \"\"\n    },\n    \"groupname\": {\n      \"text\": \"Group\",\n      \"type\": \"string\",\n      \"defaultvalue\": \"Nightly\"\n    },\n    \"hascoverage\": {\n      \"text\": \"Has Coverage\",\n      \"type\": \"bool\",\n      \"defaultvalue\": \"\"\n    },\n    \"hasctestnotes\": {\n      \"text\": \"Has CTest Notes\",\n      \"type\": \"bool\",\n      \"defaultvalue\": \"\"\n    },\n    \"hasdynamicanalysis\": {\n      \"text\": \"Has Dynamic Analysis\",\n      \"type\": \"bool\",\n      \"defaultvalue\": \"\"\n    },\n    \"hasusernotes\": {\n      \"text\": \"Has User Notes\",\n      \"type\": \"bool\",\n      \"defaultvalue\": \"\"\n    },\n    \"label\": {\n      \"text\": \"Label\",\n      \"type\": \"string\",\n      \"defaultvalue\": \"\"\n    },\n    \"priority\": {\n      \"text\": \"Priority\",\n      \"type\": \"string\",\n      \"defaultvalue\": \"\"\n    },\n    \"revision\": {\n      \"text\": \"Revision\",\n      \"type\": \"string\",\n      \"defaultvalue\": \"\"\n    },\n    \"site\": {\n      \"text\": \"Site\",\n      \"type\": \"string\",\n      \"defaultvalue\": \"\"\n    },\n    \"status\": {\n      \"text\": \"Status\",\n      \"type\": \"string\",\n      \"defaultvalue\": \"\"\n    },\n    \"subproject\": {\n      \"text\": \"SubProject\",\n      \"type\": \"string\",\n      \"defaultvalue\": \"\"\n    },\n    \"subprojects\": {\n      \"text\": \"SubProjects\",\n      \"type\": \"list\",\n      \"defaultvalue\": \"\",\n      \"content\": true\n    },\n    \"testname\": {\n      \"text\": \"Test Name\",\n      \"type\": \"string\",\n      \"defaultvalue\": \"\"\n    },\n    \"testoutput\": {\n      \"text\": \"Test Output\",\n      \"type\": \"search\",\n      \"defaultvalue\": \"\",\n      \"content\": true\n    },\n    \"testsduration\": {\n      \"text\": \"Tests Duration\",\n      \"type\": \"number\",\n      \"defaultvalue\": 0\n    },\n    \"testsfailed\": {\n      \"text\": \"Tests Failed\",\n      \"type\": \"number\",\n      \"defaultvalue\": 0\n    },\n    \"testsnotrun\": {\n      \"text\": \"Tests Not Run\",\n      \"type\": \"number\",\n      \"defaultvalue\": 0\n    },\n    \"testspassed\": {\n      \"text\": \"Tests Passed\",\n      \"type\": \"number\",\n      \"defaultvalue\": 0\n    },\n    \"testtimestatus\": {\n      \"text\": \"Tests Timing Failed\",\n      \"type\": \"number\",\n      \"defaultvalue\": 0\n    },\n    \"time\": {\n      \"text\": \"Time\",\n      \"type\": \"number\",\n      \"defaultvalue\": \"\"\n    },\n    \"timestatus\": {\n      \"text\": \"Time Status\",\n      \"type\": \"string\",\n      \"defaultvalue\": \"\"\n    },\n    \"totallines\": {\n      \"text\": \"Total Lines\",\n      \"type\": \"number\",\n      \"defaultvalue\": 0\n    },\n    \"uncoveredlines\": {\n      \"text\": \"Uncovered Lines\",\n      \"type\": \"number\",\n      \"defaultvalue\": 0\n    },\n    \"updateduration\": {\n      \"text\": \"Update Duration\",\n      \"type\": \"number\",\n      \"defaultvalue\": 0\n    },\n    \"updatedfiles\": {\n      \"text\": \"Updated Files\",\n      \"type\": \"number\",\n      \"defaultvalue\": 0\n    }\n  }\n\n  // How our data types can be compared.\n  $scope.comparisons = {\n    \"bool\": [\n      {\"value\": 1, text: \"is true\"},\n      {\"value\": 2, text: \"is false\"}\n     ],\n    \"date\": [\n      {\"value\": 81, text: \"is\"},\n      {\"value\": 82, text: \"is not\"},\n      {\"value\": 83, text: \"is after\"},\n      {\"value\": 84, text: \"is before\"}\n    ],\n    \"number\": [\n      {\"value\": 41, text: \"is\"},\n      {\"value\": 42, text: \"is not\"},\n      {\"value\": 43, text: \"is greater than\"},\n      {\"value\": 44, text: \"is less than\"}\n    ],\n    \"search\": [\n      {\"value\": 94, text: \"exclude\"},\n      {\"value\": 95, text: \"include\"},\n      {\"value\": 96, text: \"exclude regex\"},\n      {\"value\": 97, text: \"include regex\"},\n    ],\n    \"string\": [\n      {\"value\": 63, text: \"contains\"},\n      {\"value\": 64, text: \"does not contain\"},\n      {\"value\": 61, text: \"is\"},\n      {\"value\": 62, text: \"is not\"},\n      {\"value\": 65, text: \"starts with\"},\n      {\"value\": 66, text: \"ends with\"}\n    ],\n    \"list\": [\n      {\"value\": 92, text: \"exclude\"},\n      {\"value\": 93, text: \"include\"},\n    ]\n  };\n\n  // Add a new row to our list of filters.\n  $scope.addFilter = function(block, index) {\n    var previous_filter = block.filters[index-1];\n    if (previous_filter.hasOwnProperty('filters')) {\n      var filter_to_copy = previous_filter.filters[previous_filter.filters.length - 1];\n    } else {\n      var filter_to_copy = previous_filter;\n    }\n    var filter = {\n      field: filter_to_copy.field,\n      compare: filter_to_copy.compare,\n      value: filter_to_copy.value,\n    };\n    block.filters.splice(index, 0, filter);\n  };\n\n  // Remove a filter from our list.\n  $scope.removeFilter = function(block, index) {\n    block.filters.splice(index-1, 1);\n  };\n\n  // Check to see if the type of a filter was changed by the user.\n  $scope.changeFilter = function(filter) {\n    var type = $scope.filterdefinitions[filter.field].type;\n    var comparisons = $scope.comparisons[type];\n\n    // Assign the default comparison value to this filter if its type has changed.\n    var found = false;\n    for (i in comparisons) {\n      if (comparisons[i].value == filter.compare) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      filter.compare = \"0\";\n    }\n  };\n\n  $scope.applyFilters = function() {\n    var url = this.createHyperlink();\n    window.location.href = url;\n  };\n\n  $scope.clearFilters = function() {\n    $scope.filterdata.filters = [];\n    $scope.applyFilters();\n  };\n\n  $scope.displayHyperlink = function() {\n    var url = this.createHyperlink();\n    $(\"#div_filtersAsUrl\").html(\"<a href=\\\"\" + url + \"\\\">\" + url + \"</a>\");\n  };\n\n  $scope.createHyperlink = function() {\n    // Count the number of filters.\n    var n = $scope.filterdata.filters.length,\n    // Read the current query string parameters.\n    params = window.location.search.replace('?', '').split(/[&;]/g);\n\n    // Search for and remove any existing filter params.\n    var filterParams = ['filtercount', 'filtercombine', 'showfilters', 'field', 'compare', 'value', 'limit'];\n    // Reverse iteration because this is destructive.\n    for (var i = params.length; i-- > 0;) {\n      for (var j = 0; j < filterParams.length; j++) {\n        if (params[i].startsWith(filterParams[j])) {\n          params.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    // Reconstruct the URL to include the query string parameters that survived\n    // the culling above.\n    var s = window.location.origin + window.location.pathname + '?';\n    for (var i = 0; i < params.length; i++) {\n      s += params[i] + '&';\n    }\n\n    // Now add filter params.\n    s = s + \"filtercount=\" + n;\n    s = s + \"&showfilters=1\";\n\n    l = $(\"#id_limit\").val();\n    if (l != 0) {\n      s = s + \"&limit=\" + l;\n    }\n\n    if (n > 1) {\n      s = s + \"&filtercombine=\" + $scope.filterdata.filtercombine;\n    }\n\n    for (var i = 1; i <= n; i++) {\n      if ($scope.filterdata.filters[i-1].hasOwnProperty('filters')) {\n        var num_subfilters = $scope.filterdata.filters[i-1].filters.length;\n        if (num_subfilters < 1) {\n          continue;\n        }\n        var prefix = \"field\" + i;\n        s = s + \"&\" + prefix + \"=block\";\n        s = s + \"&\" + prefix + \"count=\" + num_subfilters;\n        for (var j = 1; j <= num_subfilters ; j++) {\n          s = s + \"&\" + prefix + \"field\" + j + \"=\" + encodeURIComponent($scope.filterdata.filters[i-1].filters[j-1].field);\n          s = s + \"&\" + prefix + \"compare\" + j + \"=\" + encodeURIComponent($scope.filterdata.filters[i-1].filters[j-1].compare);\n          s = s + \"&\" + prefix + \"value\" + j + \"=\" + encodeURIComponent($scope.filterdata.filters[i-1].filters[j-1].value);\n        }\n      } else {\n        s = s + \"&field\" + i + \"=\" + encodeURIComponent($scope.filterdata.filters[i-1].field);\n        s = s + \"&compare\" + i + \"=\" + encodeURIComponent($scope.filterdata.filters[i-1].compare);\n        s = s + \"&value\" + i + \"=\" + encodeURIComponent($scope.filterdata.filters[i-1].value);\n      }\n    }\n\n    return s;\n  }\n\n  // Add a sub-block of filters to our list.\n  $scope.addFilterBlock = function(index) {\n    var parent_filter = $scope.filterdata.filters[index-1];\n    var or_block = {\n      filters: []\n    };\n    var filter = {\n      field: parent_filter.field,\n      compare: parent_filter.compare,\n      value: parent_filter.value,\n    };\n    or_block.filters.push(filter);\n    $scope.filterdata.filters.splice(index, 0, or_block);\n  };\n\n  // Change the value of filterdata.othercombine.\n  $scope.updateCombine = function(filterdata) {\n    if (filterdata.filtercombine == 'or') {\n      filterdata.othercombine = 'and';\n    } else {\n      filterdata.othercombine = 'or';\n    }\n  };\n\n  var url = window.location.pathname;\n  var filename = url.substring(url.lastIndexOf('/')+1);\n  var filename_for_docs = filename;\n  if (filename === 'index.php' && 'parentid' in $rootScope.queryString) {\n    filename = 'indexchildren.php';\n  }\n  $rootScope.queryString['page_id'] = filename;\n  $rootScope.queryString['showlimit'] = 0;\n\n  $http({\n    url: 'api/v1/filterdata.php',\n    method: 'GET',\n    params: $rootScope.queryString\n  }).then(function success(s) {\n    var filterdata = s.data;\n    filterdata.filters.forEach(function(filter) {\n      if (filter.hasOwnProperty('filters')) {\n        filter.filters.forEach(function(subfilter) {\n          subfilter.compare = subfilter.compare.toString();\n        });\n      } else if (filter.hasOwnProperty('compare')) {\n        filter.compare = filter.compare.toString();\n      }\n    });\n\n    filterdata.availablenoncontentfilters = filterdata.availablefilters.slice();\n    filterdata.availablenoncontentfilters.forEach(function(availablefilter, index, object) {\n      var filter_definition = $scope.filterdefinitions[availablefilter];\n      if (filter_definition.hasOwnProperty('content') && filter_definition.content) {\n        object.splice(index, 1);\n      }\n    });\n\n    $scope.filterdata = filterdata;\n    $scope.cdash.page = filename_for_docs;\n  });\n}\n\nangular.module('CDash')\n       .directive('filterRow', function (VERSION) {\n  return {\n    templateUrl: 'build/views/partials/filterRow_' + VERSION + '.html'\n  };\n});\n\nangular.module('CDash')\n       .directive('filterButtons', function (VERSION) {\n  return {\n    templateUrl: 'build/views/partials/filterButtons_' + VERSION + '.html'\n  };\n});\n","CDash.factory('modalSvc', function modalSvc ($uibModal) {\n  const showModal = function(modelId, okFn, template, parent_scope, size, success, error) {\n    parent_scope = typeof parent_scope !== 'undefined' ? parent_scope : null;\n    size = typeof size !== 'undefined' ? size : 'sm';\n    $modal = $uibModal.open({\n      animation: true,\n      backdrop: true,\n      controller: function () {\n        var $ctrl = this;\n        $ctrl.ok = function() {\n          okFn(modelId);\n          $modal.close();\n        };\n        $ctrl.cancel = function () {\n          $modal.close();\n        }\n      },\n      controllerAs: '$ctrl',\n      size: size,\n      scope: parent_scope,\n      templateUrl: template,\n    });\n\n    // some clarification...\n    // success is the result of a successful button click (e.g. $ctrl.ok,\n    // $ctrl.cancel)\n    success = angular.isFunction(success)? success : function () {};\n\n    // error is triggered as the result of a backdrop click thus it is\n    // not really an error, but for convention's sake sticking with error\n    error = angular.isFunction(error) ? error : function () {};\n\n    // prevent console from complaining about unhandled backdrop click\n    $modal.result.then(success, error);\n\n    return $modal;\n  };\n\n  return {\n    showModal: showModal,\n  };\n});\n","// Sort by multiple columns at once.\nCDash.factory('multisort', function () {\n  return {\n    updateOrderByFields: function(obj, field, $event) {\n      // Note that by default we sort in descending order.\n      // This is accomplished by prepending the field with '-'.\n\n      var idx = obj.orderByFields.indexOf('-' + field);\n      if ($event.shiftKey) {\n        // When shift is held down we append this field to the list of sorting\n        // criteria.\n        if (idx != -1) {\n          // Reverse sort for this field because it was already in the list.\n          obj.orderByFields[idx] = field;\n        } else {\n          var idx2 = obj.orderByFields.indexOf(field);\n          if (idx2 != -1) {\n            // If field is in the list replace it with -field.\n            obj.orderByFields[idx2] = '-' + field;\n          } else {\n            // Otherwise just append -field to the end of the list.\n            obj.orderByFields.push('-' + field);\n          }\n        }\n      } else {\n        // Shift wasn't held down so this field is the only criterion that we\n        // will use for sorting.\n        if (idx != -1) {\n          obj.orderByFields = [field];\n        } else {\n          obj.orderByFields = ['-' + field];\n        }\n      }\n    }\n  };\n});\n","// Time how long the initial render takes and add this to the value\n// shown at the bottom of the page.\nCDash.factory('renderTimer', function ($timeout) {\n  var initialRender = function(controllerScope, cdash) {\n    // Redirect if the API told us to.\n    if ('redirect' in cdash) {\n      window.location = cdash.redirect;\n      return;\n    }\n\n    if (!\"generationtime\" in cdash) {\n      return;\n    }\n    var start = new Date();\n\n    // This is when the initial page render happens.\n    controllerScope.cdash = cdash;\n\n    $timeout(function() {\n      var renderTime = +((new Date() - start) / 1000);\n      controllerScope.cdash.generationtime = (renderTime + cdash.generationtime).toFixed(2);\n    }, 0, true, controllerScope, cdash);\n  };\n  return {\n    initialRender: initialRender\n  };\n});\n","CDash.controller('BuildPropertiesController',\n  function BuildPropertiesController($filter, $http, $scope, apiLoader, comparators, modalSvc, multisort) {\n    apiLoader.loadPageData($scope, 'api/v1/buildProperties.php');\n    $scope.finishSetup = function() {\n      if ($scope.cdash.builds.length < 1) {\n        return;\n      }\n\n      $scope.cdash.showDefects = false;\n      $scope.cdash.defectsLoaded = false;\n\n      $scope.cdash.selections = [];\n      $scope.addSelection();\n\n      // Isolate property keys for auto-completion.\n      $scope.cdash.propertykeys = Object.keys($scope.cdash.properties);\n\n      // A different set of comparators for each possible type of build property.\n      $scope.comparators = comparators.getComparators();\n\n      // Pagination settings for defects table.\n      $scope.pagination = [];\n      $scope.pagination.filteredTests = [];\n      $scope.pagination.currentPage = 1;\n      $scope.pagination.maxSize = 5;\n      var num_per_page_cookie = $.cookie('buildProperties_num_per_page');\n      if(num_per_page_cookie) {\n        $scope.pagination.numPerPage = parseInt(num_per_page_cookie);\n      } else {\n        $scope.pagination.numPerPage = 10;\n      }\n\n      // Sorting for defects table.\n      var sort_cookie_value = $.cookie('cdash_buildProperties_sort');\n      if(sort_cookie_value) {\n        $scope.orderByFields = sort_cookie_value.split(\",\");\n      } else {\n        $scope.orderByFields = ['-builds.length'];\n      }\n\n      $scope.chart_data = [];\n      $scope.groups = [];\n      $scope.addGroup('All', $scope.cdash.builds);\n      $scope.computeChartData();\n\n      // Initial render of chart.\n      nv.addGraph(function() {\n        $scope.chart = nv.models.multiBarChart()\n          .duration(350)\n          .rotateLabels(0)      //Angle to rotate x-axis labels.\n          .showControls(true)   //Allow user to switch between 'Grouped' and 'Stacked' mode.\n          .groupSpacing(0.1)    //Distance between each group of bars.\n        ;\n\n        $scope.chart.xAxis.tickFormat(function(d) {\n          if ($scope.groups[d] !== undefined) {\n            return $scope.groups[d].keyword;\n          } else {\n            return '';\n          }\n        });\n        $scope.chart.yAxis.tickFormat(d3.format(',f'));\n        $scope.chart.yAxis.axisLabel(\"Number of Builds\");\n\n\n        $scope.chart_selection = d3.select('#chart svg') .datum($scope.chart_data);\n        $scope.chart_selection.call($scope.chart);\n\n        $scope.chart.update();\n        nv.utils.windowResize($scope.chart.update);\n        return $scope.chart;\n      });\n    };\n\n    $scope.addGroup = function(groupname, builds) {\n      var pos = $scope.groups.length;\n      var group = {\n        keyword: groupname,\n        position: pos,\n        builds: builds\n      };\n      $scope.groups.push(group);\n    };\n\n    $scope.computeChartData = function() {\n      $scope.chart_data = [];\n\n      // Count how many builds are in each group.\n      var group_totals = [];\n      for (var i = 0; i < $scope.groups.length; ++i) {\n        group_totals.push({\n          x: $scope.groups[i].position,\n          y: $scope.groups[i].builds.length\n        });\n      }\n\n      // Count how many builds have each type of defect for each group.\n      for (var i = 0; i < $scope.cdash.defecttypes.length; ++i) {\n        var defect_type = $scope.cdash.defecttypes[i];\n        if (!defect_type.selected) {\n          continue;\n        }\n        var defect_values = [];\n        for (var j = 0; j < $scope.groups.length; ++j) {\n          var group = $scope.groups[j], defective_builds = 0;\n          for (var k = 0; k < group.builds.length; ++k) {\n            var build = group.builds[k];\n            defective_builds += build[defect_type.name] > 0 ? 1 : 0;\n          }\n          defect_values.push({\n            x: group.position,\n            y: defective_builds\n          });\n        }\n        $scope.chart_data.push({\n          key: defect_type.prettyname,\n          values: defect_values\n        });\n      }\n\n      $scope.chart_data.push({\n        key: \"Total\",\n        values: group_totals\n      });\n    };\n\n    $scope.updateSelection = function() {\n      var uri = '//' + location.host + location.pathname + '?project=' + $scope.cdash.projectname_encoded;\n      // Include date range from time chart.\n      if ($scope.cdash.begin_date == $scope.cdash.end_date) {\n        uri += '&date=' + $scope.cdash.begin_date;\n      } else {\n        uri += '&begin=' + $scope.cdash.begin_date + '&end=' + $scope.cdash.end_date;\n      }\n\n      // Get selected defects.\n      var defect_types = [];\n      for (var i = 0; i < $scope.cdash.defecttypes.length; ++i) {\n        var defect_type = $scope.cdash.defecttypes[i];\n        if (defect_type.selected) {\n          defect_types.push(defect_type.name);\n        }\n      }\n      if (defect_types.length > 0) {\n        uri += '&defects=' + defect_types.join();\n      }\n\n      window.location = uri;\n    };\n\n    // Split the \"All\" / \"Remainder\" group when adding a new selection.\n    $scope.split = function(groupName, filterExpression) {\n      if ($scope.groups.length == 1) {\n        // First split.  Remove the default 'All' group.\n        $scope.groups = [];\n      } else {\n        // Remove the 'Remainder' group.\n        var index = -1;\n        for (var i = 0, len = $scope.groups.length; i < len; i++) {\n          if ($scope.groups[i].keyword === 'Remainder') {\n            index = i;\n            break;\n          }\n        }\n        if (index > -1) {\n          $scope.groups.splice(index, 1);\n        }\n      }\n\n      // Find the builds that match our expression.\n      var matchingBuilds = $filter('filter')($scope.cdash.builds, filterExpression);\n      $scope.addGroup(groupName, matchingBuilds);\n\n      // (Re-)create the 'Remainder' group.\n      var remainingBuilds = $filter('filter')($scope.cdash.builds, function(value, index, array) {\n        var keep_this_build = true;\n        for (var i = 0; i < $scope.groups.length; ++i) {\n          var group = $scope.groups[i];\n          for (var j = 0; j < group.builds.length; ++j) {\n            var build = group.builds[j];\n            if (value.id == build.id) {\n              keep_this_build = false;\n              break;\n            }\n          }\n          if (!keep_this_build) {\n            break;\n          }\n        }\n        return keep_this_build;\n      });\n      $scope.addGroup('Remainder', remainingBuilds);\n\n      $scope.computeChartData();\n      $scope.rerenderChart();\n    };\n\n    // Remove a group and put its builds back in the \"All\" / \"Remainder\" group.\n    $scope.unsplit = function(groupName) {\n      // Find the group to remove.\n      var idx_to_remove = -1;\n      for (var i = 0, len = $scope.groups.length; i < len; i++) {\n        if ($scope.groups[i].keyword === groupName) {\n          idx_to_remove = i;\n          break;\n        }\n      }\n      if (idx_to_remove === -1) {\n        return;\n      }\n      var groupToRemove = $scope.groups[idx_to_remove];\n\n      // Find the group named \"Remainder\".\n      var idx_remain = -1;\n      for (var i = 0, len = $scope.groups.length; i < len; i++) {\n        if ($scope.groups[i].keyword === \"Remainder\") {\n          idx_remain = i;\n          break;\n        }\n      }\n      if (idx_remain === -1) {\n        return;\n      }\n\n      // Find any builds in the group to be removed that do not belong\n      // anywhere else.  Add those back into the \"Remainder\" group.\n      var buildids_to_move = [];\n      for (var i = 0, len1 = groupToRemove.builds.length; i < len1; i++) {\n        var build = groupToRemove.builds[i], move_this_build = true;\n        for (var j = 0, len2 = $scope.groups.length; j < len2; j++) {\n          var group = $scope.groups[j];\n          if (j === idx_to_remove || group.keyword === \"Remainder\") {\n            continue;\n          }\n          for (var k = 0, len3 = group.builds.length; k < len3; k++) {\n            if (group.builds[k].id === build.id) {\n              move_this_build = false;\n              break;\n            }\n          }\n          if (!move_this_build) {\n            break;\n          }\n        }\n        if (move_this_build) {\n          buildids_to_move.push(groupToRemove.builds[i].id);\n        }\n      }\n\n      // Move the appropriate builds back to the \"Remainder\" group.\n      var filterExpression = function(value, index, array) {\n        if (buildids_to_move.indexOf(value.id) === -1) {\n          return false;\n        }\n        return true;\n      };\n      var matchingBuilds = $filter('filter')($scope.cdash.builds, filterExpression);\n      $scope.groups[idx_remain].builds = $scope.groups[idx_remain].builds.concat(matchingBuilds);\n\n      // Now we can remove the group.\n      $scope.groups.splice(idx_to_remove, 1);\n\n      // Update positions of surviving groups.\n      for (var i = 0, len = $scope.groups.length; i < len; i++) {\n        $scope.groups[i].position = i;\n      }\n\n      if ($scope.groups.length == 1) {\n        // If we're back down to one group, rename it from \"Remainder\" to \"All\".\n        $scope.groups[0].keyword = \"All\";\n      }\n\n      // Redraw the chart.\n      $scope.computeChartData();\n      $scope.rerenderChart();\n    };\n\n    $scope.rerenderChart = function() {\n      $scope.chart_selection.datum($scope.chart_data).transition().duration(500).call($scope.chart);\n      nv.utils.windowResize($scope.chart.update);\n    };\n\n\n    $scope.addSelection = function() {\n      var selection = [\n        {\n          'name': '',\n          'comparator': '',\n          'comparators': [],\n          'property': '',\n          'applied': false\n        }\n      ];\n      $scope.cdash.selections.push(selection);\n    };\n\n    $scope.removeSelection = function(selection) {\n      var index = $scope.cdash.selections.indexOf(selection);\n      if (index > -1) {\n        $scope.cdash.selections.splice(index, 1);\n        $scope.unsplit(selection.name);\n      }\n    };\n\n    $scope.applySelection = function(selection) {\n      var user_clause = selection.property + \" \" + selection.comparator.symbol + \" \" + selection.value;\n      var actual_code = 'value.properties.' + user_clause;\n\n      var filterExpression = function(value, index, array) {\n        try {\n          var b = eval(actual_code);\n        } catch (err) {\n          selection.error = err.message;\n        }\n        if (b) {\n          return true;\n        }\n        return false;\n      };\n\n      selection.applied = true;\n      $scope.split(selection.name, filterExpression);\n      $scope.addSelection();\n    };\n\n    $scope.updateComparators = function(selection) {\n      var idx = $scope.cdash.propertykeys.indexOf(selection.property);\n      if (idx != -1) {\n        var type = $scope.cdash.properties[selection.property].type;\n        selection.comparators = $scope.comparators[type];\n      }\n    };\n\n    $scope.showModal = function(defect) {\n      $scope.cdash.currentDefect = defect;\n      modalSvc.showModal(null, function(){}, 'modal-template', $scope, 'lg');\n    };\n\n    $scope.toggleDefects = function() {\n      if (!$scope.cdash.defectsLoaded) {\n        $scope.loadDefects();\n      } else {\n        $scope.cdash.showDefects = !$scope.cdash.showDefects;\n      }\n    };\n\n    $scope.loadDefects = function() {\n      $scope.cdash.loadingDefects = true;\n\n      var buildids = [];\n      for (var i = 0; i < $scope.cdash.builds.length ; ++i) {\n        buildids.push($scope.cdash.builds[i].id);\n      }\n\n      var defect_types = [];\n      for (var i = 0; i < $scope.cdash.defecttypes.length; ++i) {\n        var defect_type = $scope.cdash.defecttypes[i];\n        if (defect_type.selected) {\n          defect_types.push(defect_type.name);\n        }\n      }\n\n      // Query the API to get the types of defects suffered by these builds.\n      var parameters = {\n        \"buildid[]\": buildids,\n        \"defect[]\": defect_types\n      };\n      $scope.cdash.defectsError = '';\n      $http({\n        url: 'api/v1/buildProperties.php',\n        method: 'GET',\n        params: parameters\n      }).then(function success(s) {\n        $scope.cdash.defects = s.data.defects;\n        for (var i = 0; i < $scope.cdash.defects.length; ++i) {\n          $scope.cdash.defects[i].classifiersLoaded = false;\n          $scope.cdash.defects[i].loadingClassifiers = false;\n          $scope.cdash.defects[i].showClassifiers = false;\n        }\n        $scope.cdash.defects = $filter('orderBy')($scope.cdash.defects, $scope.orderByFields);\n        $scope.cdash.defectsLoaded = true;\n        $scope.cdash.showDefects = true;\n        $scope.pageChanged();\n      }, function error(e) {\n        $scope.cdash.defectsError = e.data;\n      }).finally(function() {\n        $scope.cdash.loadingDefects = false;\n      });\n    };\n\n    $scope.toggleClassifiers = function(defect) {\n      if (!defect.classifiersLoaded) {\n        $scope.computeClassifiers(defect);\n      }\n      defect.showClassifiers = !defect.showClassifiers;\n    };\n\n    $scope.computeClassifiers = function(defect) {\n      defect.loadingClassifiers = true;\n      // Mark each build as passing or failing.\n      for (var i = 0; i < $scope.cdash.builds.length; ++i) {\n        if (defect.builds.indexOf($scope.cdash.builds[i].id) === -1) {\n          $scope.cdash.builds[i].success = true;\n        } else {\n          $scope.cdash.builds[i].success = false;\n        }\n      }\n      // Send the builds back to our API, which will figure out what properties are\n      // most informative in distinguishing between passing & failing.\n      var parameters = {\n        \"builds[]\": $scope.cdash.builds\n      };\n      $http({\n        url: 'api/v1/computeClassifier.php',\n        method: 'GET',\n        params: parameters\n      }).then(function success(s) {\n        defect.classifiers = s.data;\n        defect.classifiersLoaded = true;\n      }, function error(e) {\n        $scope.cdash.warning = e.data;\n      }).finally(function() {\n        defect.loadingClassifiers = false;\n      });\n    };\n\n    $scope.pageChanged = function() {\n      var begin = (($scope.pagination.currentPage - 1) * $scope.pagination.numPerPage)\n      , end = begin + $scope.pagination.numPerPage;\n      if (end > 0) {\n        $scope.pagination.filteredDefects = $scope.cdash.defects.slice(begin, end);\n      } else {\n        $scope.pagination.filteredDefects = $scope.cdash.defects;\n      }\n    };\n\n    $scope.numDefectsPerPageChanged = function() {\n      $.cookie(\"buildProperties_num_per_page\", $scope.pagination.numPerPage, { expires: 365 });\n      $scope.pageChanged();\n    };\n\n    $scope.updateOrderByFields = function(field, $event) {\n      multisort.updateOrderByFields($scope, field, $event);\n      $scope.cdash.defects = $filter('orderBy')($scope.cdash.defects, $scope.orderByFields);\n      $scope.pageChanged();\n      $.cookie('cdash_buildProperties_sort', $scope.orderByFields);\n    };\n});\n","CDash.controller('BuildSummaryController',\n  function BuildSummaryController($scope, $http, $location, $timeout, anchors, apiLoader) {\n    // Support for the various graphs on this page.\n    $scope.showTimeGraph = false;\n    $scope.showErrorGraph = false;\n    $scope.showWarningGraph = false;\n    $scope.showTestGraph = false;\n    $scope.showHistoryGraph = false;\n    $scope.showNote = false;\n    $scope.graphLoading = false;\n    $scope.graphLoaded = false;\n    $scope.graphData = [];\n    $scope.graphRendered = {\n      'time': false,\n      'errors': false,\n      'warnings': false,\n      'tests': false\n    };\n\n    apiLoader.loadPageData($scope, 'api/v1/buildSummary.php');\n\n    $scope.finishSetup = function() {\n      $scope.cdash.noteStatus = \"0\";\n\n      // Expose the jumpToAnchor function to the scope.\n      // This allows us to call it from the HTML template.\n      $scope.jumpToAnchor = anchors.jumpToAnchor;\n\n      // Honor any intra-page anchor specified in the URI.\n      if ($location.hash() != '') {\n        anchors.jumpToAnchor($location.hash());\n      }\n    };\n\n    // Show/hide our various history graphs.\n    $scope.toggleTimeGraph = function() {\n      $scope.showTimeGraph = !$scope.showTimeGraph;\n      // Use a 1 ms timeout before loading graph data.\n      // This gives the holder div a chance to become visible before the graph\n      // is drawn.  Otherwise flot has trouble drawing the graph with the\n      // correct dimensions.\n      $timeout(function() {\n        if (!$scope.graphLoaded) {\n          $scope.loadGraphData('time');\n        } else {\n          $scope.renderGraph('time');\n        }\n      }, 1);\n    };\n    $scope.toggleErrorGraph = function() {\n      $scope.showErrorGraph = !$scope.showErrorGraph;\n      $timeout(function() {\n        if (!$scope.graphLoaded) {\n          $scope.loadGraphData('errors');\n        } else {\n          $scope.renderGraph('errors');\n        }\n      }, 1);\n    };\n    $scope.toggleWarningGraph = function() {\n      $scope.showWarningGraph = !$scope.showWarningGraph;\n      $timeout(function() {\n        if (!$scope.graphLoaded) {\n          $scope.loadGraphData('warnings');\n        } else {\n          $scope.renderGraph('warnings');\n        }\n      }, 1);\n    };\n    $scope.toggleTestGraph = function() {\n      $scope.showTestGraph = !$scope.showTestGraph;\n      $timeout(function() {\n        if (!$scope.graphLoaded) {\n          $scope.loadGraphData('tests');\n        } else {\n          $scope.renderGraph('tests');\n        }\n      }, 1);\n    };\n    $scope.toggleHistoryGraph = function() {\n      $scope.showHistoryGraph = !$scope.showHistoryGraph;\n      // Not rendered by flot, so no need for timeout.\n      $scope.loadGraphData();\n    };\n\n    // Load graph data via AJAX.\n    $scope.loadGraphData = function(graphType) {\n      $scope.graphLoading = true;\n      $http({\n        url: 'api/v1/getPreviousBuilds.php',\n        method: 'GET',\n        params: { buildid: $scope.cdash.build.id }\n      }).then(function success(s) {\n        var resp = s.data;\n        $scope.cdash.buildtimes = [];\n        $scope.cdash.builderrors = [];\n        $scope.cdash.buildwarnings = [];\n        $scope.cdash.testfailed = [];\n        $scope.cdash.buildids = [];\n        $scope.cdash.buildhistory = [];\n\n        // Isolate data for each graph.\n        var builds = resp['builds'];\n        for (var i = 0, len = builds.length; i < len; i++) {\n          var build = builds[i];\n          var t = build['timestamp'];\n\n          $scope.cdash.buildtimes.push([t, build['time'] / 60]);\n          $scope.cdash.builderrors.push([t, build['builderrors']]);\n          $scope.cdash.buildwarnings.push([t, build['buildwarnings']]);\n          $scope.cdash.testfailed.push([t, build['testfailed']]);\n          $scope.cdash.buildids[t] = build['id'];\n\n          var history_build = [];\n          history_build['id'] = build['id'];\n          history_build['nfiles'] = build['nfiles'];\n          history_build['configureerrors'] = build['configureerrors'];\n          history_build['configurewarnings'] = build['configurewarnings'];\n          history_build['builderrors'] = build['builderrors'];\n          history_build['buildwarnings'] = build['buildwarnings'];\n          history_build['testfailed'] = build['testfailed'];\n          history_build['starttime'] = build['starttime'];\n          $scope.cdash.buildhistory.push(history_build);\n        }\n        $scope.graphLoaded = true;\n        if (graphType) {\n          // Render the graph that triggered this call.\n          $scope.renderGraph(graphType);\n        }\n      }).finally(function() {\n        $scope.graphLoading = false;\n      });\n    };\n\n    // Initial render for one of our graphs.\n    $scope.renderGraph = function (graphType) {\n\n      if ($scope.graphRendered[graphType]) {\n        // Already rendered, abort early.\n        return;\n      }\n\n      // Options shared by all four graphs.\n      var data, element, label;\n      var options = {\n          lines: {show: true},\n          points: {show: true},\n          xaxis: {mode: \"time\"},\n          grid: {\n              backgroundColor: \"#fffaff\",\n              clickable: true,\n              hoverable: true,\n              hoverFill: '#444',\n              hoverRadius: 4\n          },\n          selection: {mode: \"x\"},\n      };\n\n      switch (graphType) {\n        case 'time':\n          options['colors'] = [\"#41A317\"];\n          options['yaxis'] = {\n            tickFormatter: function (v, axis) {\n              return v.toFixed(axis.tickDecimals) + \" mins\"}\n          };\n          data = $scope.cdash.buildtimes;\n          element = \"#buildtimegrapholder\";\n          label = \"Build Time\";\n          break;\n        case 'errors':\n          options['colors'] = [\"#FF0000\"];\n          options['yaxis'] = {minTickSize: 1};\n          data = $scope.cdash.builderrors;\n          element = \"#builderrorsgrapholder\";\n          label = \"# errors\";\n          break;\n        case 'warnings':\n          options['colors'] = [\"#FDD017\"];\n          options['yaxis'] = {minTickSize: 1};\n          data = $scope.cdash.buildwarnings;\n          element = \"#buildwarningsgrapholder\";\n          label = \"# warnings\";\n          break;\n        case 'tests':\n          options['colors'] = [\"#0000FF\"];\n          options['yaxis'] = {minTickSize: 1};\n          data = $scope.cdash.testfailed;\n          element = \"#buildtestsfailedgrapholder\";\n          label = \"# tests failed\";\n          break;\n        default:\n          return;\n      }\n\n      // Render the graph.\n      var plot = $.plot($(element), [{label: label, data: data}],\n        options);\n\n      $(element).bind(\"selected\", function (event, area) {\n        // Set axis range to highlighted section and redraw plot.\n        var axes = plot.getAxes(),\n        xaxis = axes.xaxis.options;\n        xaxis.min = area.x1;\n        xaxis.max = area.x2;\n        plot.clearSelection();\n        plot.setupGrid();\n        plot.draw();\n      });\n\n      $(element).bind(\"plotclick\", function (e, pos, item) {\n        if (item) {\n          plot.highlight(item.series, item.datapoint);\n          buildid = buildids[item.datapoint[0]];\n          window.location = \"buildSummary.php?buildid=\" + buildid;\n        }\n      });\n\n      $(element).bind('dblclick', function(event) {\n        // Set axis range to null.  This makes all data points visible.\n        var axes = plot.getAxes(),\n        xaxis = axes.xaxis.options,\n        yaxis = axes.yaxis.options;\n        xaxis.min = null;\n        xaxis.max = null;\n        yaxis.min = null;\n        yaxis.max = null;\n\n        // Redraw the plot.\n        plot.setupGrid();\n        plot.draw();\n      });\n\n      $scope.graphRendered[graphType] = true;\n    };\n\n    $scope.toggleNote = function() {\n      $scope.showNote = !$scope.showNote;\n    };\n\n    $scope.addNote = function() {\n      var parameters = {\n        buildid: $scope.cdash.build.id,\n        Status: $scope.cdash.noteStatus,\n        AddNote: $scope.cdash.noteText\n      };\n\n      $http.post('api/v1/addUserNote.php', parameters)\n      .then(function success(s) {\n        // Add the newly created note to our list.\n        $scope.cdash.notes.push(s.data.note);\n      }, function error(e) {\n        // Display the error.\n        $scope.cdash.error = e.data.error;\n      });\n    };\n\n});\n","CDash.controller('CompareCoverageController',\n  function CompareCoverageController($scope, $rootScope, apiLoader, filters, multisort) {\n    // Hide filters by default.\n    $scope.showfilters = false;\n\n    // Check for filters.\n    $rootScope.queryString['filterstring'] = filters.getString();\n\n    $scope.sortCoverage = { orderByFields: [] };\n\n    apiLoader.loadPageData($scope, 'api/v1/compareCoverage.php');\n\n    $scope.showfilters_toggle = function() {\n      $scope.showfilters = !$scope.showfilters;\n      filters.toggle($scope.showfilters);\n    };\n\n    $scope.updateOrderByFields = function(obj, field, $event) {\n      multisort.updateOrderByFields(obj, field, $event);\n    };\n});\n","CDash.controller('CreateProjectController',\n  function CreateProjectController($scope, $http, $location, $timeout, apiLoader, Upload) {\n    apiLoader.loadPageData($scope, 'api/v1/createProject.php');\n\n    $scope.finishSetup = function() {\n      $scope.cdash.changesmade = false;\n      var activeTab = 1;\n      var disableTabs = false;\n\n      // Go to a specific tab if one was specified.\n      var hash = $location.hash();\n      if (hash.startsWith('tab')) {\n        var whichTab = hash.match(/\\d+/);\n        if (whichTab) {\n          activeTab = whichTab;\n        }\n      }\n\n      if ($scope.cdash.edit == 0) {\n        disableTabs = true;\n        $scope.cdash.submitdisabled = true;\n      }\n\n      $scope.cdash.tabs = [\n        {\n          'disabled': false,\n          'active': activeTab == 1\n        },\n        {\n          'disabled': disableTabs,\n          'active': activeTab == 2\n        },\n        {\n          'disabled': disableTabs,\n          'active': activeTab == 3\n        },\n        {\n          'disabled': disableTabs,\n          'active': activeTab == 4\n        },\n        {\n          'disabled': disableTabs,\n          'active': activeTab == 5\n        },\n        {\n          'disabled': disableTabs,\n          'active': activeTab == 6\n        }\n      ];\n\n      if ($scope.cdash.edit == 1) {\n        $scope.cdash.tabs.push({\n          'disabled': false,\n          'active': activeTab == 7\n        });\n        $scope.cdash.tabs.push({\n          'disabled': false,\n          'active': activeTab == 8\n        });\n      }\n\n      // Example URLs to create a new issue on a supported bug tracking system.\n      $scope.cdash.bugtrackerexamples = {\n        Buganizer: '<bug-url>/new?component=###&template=###',\n        GitHub: 'https://github.com/:owner/:repo/issues/new?',\n        JIRA: '<bug-url>/secure/CreateIssueDetails!init.jspa?pid=###&issuetype=#'\n      };\n      $scope.cdash.bugtrackertypes = Object.keys($scope.cdash.bugtrackerexamples);\n      if ($scope.cdash.project.BugTrackerType && $scope.cdash.project.BugTrackerNewIssueUrl) {\n        $scope.cdash.issuecreation = true;\n      } else {\n        $scope.cdash.issuecreation = false;\n      }\n    };\n\n    $scope.showHelp = function(id_div) {\n      $(\".tab_help\").html($(\"#\"+id_div).html()).show();\n    };\n\n    $scope.clearHelp = function() {\n      $('.tab_help').html('');\n    };\n\n    $scope.nextTab = function(idx) {\n      if(idx == 0 && ($scope.cdash.project.Name === undefined || $scope.cdash.project.Name == '')) {\n        alert('please specify a name for the project.');\n        return false;\n      }\n      $scope.gotoTab(idx + 1);\n      if(idx == 4) {\n        $scope.cdash.submitdisabled = false;\n      }\n    };\n\n    $scope.previousTab = function(idx) {\n      $scope.gotoTab(idx - 1);\n    };\n\n    $scope.gotoTab = function(idx) {\n      $scope.clearHelp();\n      for (var i = 0; i < $scope.cdash.tabs.length; i++) {\n        $scope.cdash.tabs[i].active = false;\n      }\n      $scope.cdash.tabs[idx].disabled = false;\n      $scope.cdash.tabs[idx].active = true;\n      $scope.setTab(idx);\n    };\n\n    $scope.setTab = function(idx) {\n      $location.hash(\"tab\" + idx);\n    };\n\n    $scope.createProject = function() {\n      var parameters = {\n        Submit: true,\n        project: $scope.cdash.project\n      };\n      $http.post('api/v1/project.php', parameters)\n      .then(function success(s) {\n        var cdash = s.data;\n        if (cdash.projectcreated && cdash.project) {\n          $scope.cdash.projectcreated = cdash.projectcreated;\n          $scope.cdash.project = cdash.project;\n          $scope.setLogo();\n        }\n      }, function error(e) {\n        $scope.cdash.error = e.data.error;\n      });\n    };\n\n    $scope.updateProject = function() {\n      var parameters = {\n        Update: true,\n        project: $scope.cdash.project\n      };\n      $http.post('api/v1/project.php', parameters)\n      .then(function success(s) {\n        var cdash = s.data;\n        if (cdash.projectupdated && cdash.project) {\n          $scope.cdash.changesmade = false;\n          $scope.cdash.projectupdated = true;\n          $scope.cdash.project = cdash.project;\n          $scope.setLogo();\n          $scope.startFade = false;\n          $timeout(function() {\n            $scope.cdash.projectupdated = false;\n            $scope.startFade = true;\n          }, 2000);\n        }\n      }, function error(e) {\n        $scope.cdash.error = e.data.error;\n      });\n    };\n\n    $scope.setLogo = function() {\n      if ($scope.cdash.logoFile) {\n        Upload.upload({\n          url: 'api/v1/project.php',\n          data: {\n            project: $scope.cdash.project,\n            logo: $scope.cdash.logoFile\n          }\n        }).then(function (resp) {\n          if (resp.data.imageid > 0) {\n            $scope.cdash.logoFile = null;\n            // Use a decache to force the logo to refresh even if the imageid didn't change.\n            var imageid = resp.data.imageid + \"&decache=\" + new Date().getTime();\n            $scope.cdash.project.ImageId = imageid;\n            $scope.cdash.logoid = imageid;\n          }\n        });\n      }\n    };\n\n    $scope.deleteProject = function() {\n      if (window.confirm(\"Are you sure you want to delete this project?\")) {\n        var parameters = { project: $scope.cdash.project };\n        $http({\n          url: 'api/v1/project.php',\n          method: 'DELETE',\n          params: parameters\n        }).then(function success() {\n          // Redirect to user.php\n          window.location = 'user.php';\n        });\n      }\n    };\n\n    $scope.changeViewerType = function() {\n      if (!$scope.cdash.selectedViewer) {\n        return;\n      }\n      $scope.cdash.project.CvsViewerType = $scope.cdash.selectedViewer.value;\n      if (!$scope.cdash.project.CvsUrl) {\n        return;\n      }\n      var parameters = {\n        method: 'repository',\n        task: 'exampleurl',\n        url: $scope.cdash.project.CvsUrl,\n        type: $scope.cdash.selectedViewer.value\n      };\n      $http({\n        url: 'api/v1/index_old.php',\n        method: 'GET',\n        params: parameters\n      }).then(function success(s) {\n        $scope.cdash.repositoryurlexample = s.data;\n      });\n    };\n\n    $scope.addRepository = function() {\n      // Add another repository form.\n      $scope.cdash.project.repositories.push({\n        url: '',\n        branch: '',\n        username: '',\n        password: ''\n      });\n    };\n\n    $scope.addBlockedBuild = function(blockedbuild) {\n      var parameters = {\n        project: $scope.cdash.project,\n        AddBlockedBuild: blockedbuild\n      };\n      $http.post('api/v1/project.php', parameters)\n      .then(function success(s) {\n        var cdash = s.data;\n        if (cdash.blockedid > 0) {\n          blockedbuild.id = cdash.blockedid;\n          $scope.cdash.project.blockedbuilds.push(blockedbuild);\n          $scope.cdash.buildblocked = true;\n          $scope.startFade = false;\n          $timeout(function() {\n            $scope.cdash.buildblocked = false;\n            $scope.startFade = true;\n            }, 2000);\n        }\n      }, function error(e) {\n        $scope.cdash.error = e.data.error;\n      });\n    };\n\n    $scope.removeBlockedBuild = function(blockedbuild) {\n      var parameters = {\n        project: $scope.cdash.project,\n        RemoveBlockedBuild: blockedbuild\n      };\n      $http.post('api/v1/project.php', parameters)\n      .then(function success(s) {\n        var cdash = s.data;\n        // Find and remove this build.\n        var index = -1;\n        for(var i = 0, len = $scope.cdash.project.blockedbuilds.length; i < len; i++) {\n          if ($scope.cdash.project.blockedbuilds[i].id === blockedbuild.id) {\n            index = i;\n            break;\n          }\n        }\n        if (index > -1) {\n          $scope.cdash.project.blockedbuilds.splice(index, 1);\n        }\n      }, function error(e) {\n        $scope.cdash.error = e.data.error;\n      });\n    };\n\n    $scope.changeTrackerType = function() {\n      if (!$scope.cdash.project.BugTrackerType) {\n        return;\n      }\n      if (!$scope.cdash.project.BugTrackerType in $scope.cdash.bugtrackerexamples) {\n        $scope.cdash.newissuehelp = '';\n      } else {\n        $scope.cdash.newissuehelp = $scope.cdash.bugtrackerexamples[$scope.cdash.project.BugTrackerType];\n      }\n    };\n\n});\n","CDash.controller('HeadController', function HeadController($rootScope, $document) {\n  // Adapted from:\n  // http://www.quirksmode.org/js/cookies.html\n  $rootScope.readCookie = function(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i=0;i < ca.length;i++) {\n      var c = ca[i];\n      while (c.charAt(0)==' ') c = c.substring(1,c.length);\n      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\n    }\n    return null;\n  };\n\n  // Pick which CSS file to use based on user settings.\n  var colorblind = $rootScope.readCookie('colorblind');\n  if (colorblind == 1) {\n    $rootScope.cssfile = \"colorblind\";\n  } else {\n    $rootScope.cssfile = \"cdash\";\n  }\n\n  // Load query string parameters into javascript object.\n  $rootScope.queryString = {};\n  var match,\n      pl     = /\\+/g,  // Regex for replacing addition symbol with a space\n      search = /([^&=]+)=?([^&]*)/g,\n      decode = function (s) { return decodeURIComponent(s.replace(pl, \" \")); },\n      query  = window.location.search.substring(1);\n  while (match = search.exec(query)) {\n    $rootScope.queryString[decode(match[1])] = decode(match[2]);\n  }\n\n  $rootScope.setupCalendar = function(date) {\n    if (date) {\n      year = date.substr(0, 4);\n      if (date.length == 8) {\n        month = date.substr(4, 2);\n        day = date.substr(6, 2);\n      } else {\n        month = date.substr(5, 2);\n        day = date.substr(8, 2);\n      }\n      $('#calendar').datepicker({\n        onSelect: $rootScope.calendarSelected,\n        defaultDate: new Date(month + '/' + day + '/' + year),\n        maxDate: \"0D\" // restrict to the past\n      });\n    } else {\n      $('#calendar').datepicker({\n        onSelect: $rootScope.calendarSelected,\n        maxDate: \"0D\" // restrict to the past\n      });\n    }\n  };\n\n  // Navigate to a different date (from the inline date picker) for the current page.\n  $rootScope.calendarSelected = function(dateStr) {\n    var dateValue = dateStr.substr(6, 4) + \"-\" + dateStr.substr(0, 2) + \"-\" + dateStr.substr(3, 2);\n    var uri = window.location.href;\n    var dateStr = '&date=' + dateValue;\n    if (uri.indexOf('date=') > -1) {\n      uri = uri.replace(/(date=)[^\\&]+/, '$1' + dateValue);\n    } else {\n      // No date currently specified.\n      var filterIdx = uri.indexOf('&filter');\n      if (filterIdx > -1) {\n        // Insert the date clause before any filter stuff.\n        uri = uri.slice(0, filterIdx) + dateStr + uri.slice(filterIdx);\n      } else {\n        // No filters either, stick the date on the end.\n        uri += dateStr;\n      }\n    }\n    window.location = uri;\n    $('#calendar').hide();\n  };\n\n  $rootScope.toggleCalendar = function() {\n    if (!$(\"#calendar\").hasClass(\"hasDatepicker\")) {\n      // Setup the calendar the first time it is clicked.\n      if (\"date\" in $rootScope.queryString) {\n        $rootScope.setupCalendar($rootScope.queryString.date);\n      } else {\n        $rootScope.setupCalendar();\n      }\n    }\n    $( \"#calendar\" ).toggle();\n  };\n\n});\n","CDash.filter(\"showEmptyBuildsLast\", function () {\n  // Move missing expected builds and those missing data to the bottom of the table.\n  return function (builds, sortField) {\n    if (!angular.isArray(builds)) return;\n\n    // Expected builds that haven't submitted yet will appear\n    // at the bottom of the table.\n    var nonempty = builds.filter(function (build) {\n      return !('expectedandmissing' in build);\n    });\n    var expecteds = builds.filter(function (build) {\n      return 'expectedandmissing' in build;\n    });\n\n    // Get the primary (first) field that we're sorting by.\n    if (angular.isArray(sortField)) {\n      if (sortField.length < 1) {\n        return nonempty.concat(expecteds);\n      }\n      sortField = sortField[0];\n    }\n    if (sortField.charAt(0) == '-') {\n      sortField = sortField.substring(1);\n    }\n\n    // The only sort fields that could have missing data have\n    // a '.' in their name (update.files, compilation.errors, etc.)\n    // So if we're not sorting by one of them, we can return early.\n    var idx = sortField.indexOf('.');\n    if (idx === -1) {\n      return nonempty.concat(expecteds);\n    }\n\n    // Put builds that don't have any data for our sortField\n    // at the bottom of the table, but above the expected-and-missing\n    // builds.\n    var dataField = sortField.substr(0, idx);\n    var present = nonempty.filter(function (build) {\n      return dataField in build;\n    });\n    var missing = nonempty.filter(function (build) {\n      return !(dataField in build);\n    });\n\n    present = present.concat(missing);\n    return present.concat(expecteds);\n  };\n})\n\n\n.controller('IndexController', function IndexController($scope, $rootScope, $location, $http, $filter, $timeout, anchors, apiLoader, filters, multisort, modalSvc) {\n  // Show spinner while page is loading.\n  $scope.loading = true;\n\n  // Hide filters & settings dropdown menu by default.\n  $scope.showfilters = false;\n  $scope.showsettings = false;\n\n  // Show/hide feed based on cookie settings.\n  var feed_cookie = $.cookie('cdash_hidefeed');\n  if(feed_cookie) {\n    $scope.showFeed = false;\n  } else {\n    $scope.showFeed = true;\n  }\n\n  // Check if we have a cookie for auto-refresh.\n  var timer, refresh_cookie = $.cookie('cdash_refresh');\n  if(refresh_cookie) {\n    $scope.autoRefresh = true;\n    timer = $timeout(function () {\n      window.location.reload(true);\n    }, 5000);\n  } else {\n    $scope.autoRefresh = false;\n  }\n\n  // Hide timeline chart by default, but show it if we have a cookie for it.\n  $scope.showTimelineChart = false;\n  var timelinechart_cookie = $.cookie('cdash_timelinechart');\n  if(timelinechart_cookie) {\n    $scope.showTimelineChart = true;\n  }\n\n  // Check for filters\n  $rootScope.queryString['filterstring'] = filters.getString();\n\n  // Check if buildgroup sort order was specified via query string.\n  var query_sort_order = [];\n  if ('sort' in $rootScope.queryString) {\n    query_sort_order = $rootScope.queryString.sort.split(\",\");\n  }\n\n  apiLoader.loadPageData($scope, 'api/v1/index.php');\n\n  $scope.finishSetup = function() {\n    // Check for more sorting cookies.  Buildgroup sorting is handled below.\n    var sort_order = [];\n    var cookie_value = $.cookie('cdash_' + $scope.cdash.projectname + '_coverage_sort');\n    if(cookie_value) {\n      sort_order = cookie_value.split(\",\");\n    }\n    $scope.sortCoverage = { orderByFields: sort_order };\n\n    sort_order = [];\n    cookie_value = $.cookie('cdash_' + $scope.cdash.projectname + '_DA_sort');\n    if(cookie_value) {\n      sort_order = cookie_value.split(\",\");\n    }\n    $scope.sortDA = { orderByFields: sort_order };\n\n    sort_order = [];\n    cookie_value = $.cookie('cdash_' + $scope.cdash.projectname + '_subproject_sort');\n    if(cookie_value) {\n      sort_order = cookie_value.split(\",\");\n    }\n    $scope.sortSubProjects = { orderByFields: sort_order };\n\n    // Check if we have a cookie for number of rows to display.\n    var num_per_page_cookie = $.cookie('num_builds_per_page');\n\n    // Modify some settings if we're viewing the results from a single group.\n    if ('buildgroup' in $rootScope.queryString) {\n      $scope.showTimelineChart = true;\n      $scope.cdash.buildgroup = $rootScope.queryString['buildgroup'];\n    }\n\n    for (var i in $scope.cdash.buildgroups) {\n      if (!$scope.cdash.buildgroups.hasOwnProperty(i)) {\n        continue;\n      }\n\n      // Initialize pagination settings.\n      $scope.cdash.buildgroups[i].pagination = [];\n      $scope.cdash.buildgroups[i].pagination.filteredBuilds = [];\n      $scope.cdash.buildgroups[i].pagination.currentPage = 1;\n      $scope.cdash.buildgroups[i].pagination.maxSize = 5;\n      if(num_per_page_cookie) {\n        $scope.cdash.buildgroups[i].pagination.numPerPage = parseInt(num_per_page_cookie);\n      } else {\n        $scope.cdash.buildgroups[i].pagination.numPerPage = 10;\n      }\n\n      // Setup sorting.\n      var sorting_set = false;\n      if (query_sort_order.length > 0) {\n        // Use sort order that was specified via query string.\n        $scope.cdash.buildgroups[i].orderByFields = query_sort_order;\n        sorting_set = true;\n      } else {\n        // If sort order wasn't specified via query string, check to see\n        // if we have a cookie telling us how to sort this buildgroup.\n        var cookie_name = $scope.getCookieName($scope.cdash.buildgroups[i], $scope.cdash.projectname, $scope.cdash.childview);\n        var sort_cookie_value = $.cookie(cookie_name);\n        if(sort_cookie_value) {\n          sort_order = sort_cookie_value.split(\",\");\n          $scope.cdash.buildgroups[i].orderByFields = sort_order;\n          sorting_set = true;\n        }\n      }\n      if (!sorting_set) {\n        // Default sorting.\n        $scope.cdash.buildgroups[i].orderByFields = [];\n\n        // When viewing the children of a single build, show problematic\n        // SubProjects sorted oldest to newest.\n        if ($scope.cdash.childview == 1) {\n          if ($scope.cdash.buildgroups[i].numbuilderror > 0) {\n            $scope.cdash.buildgroups[i].orderByFields.push('-compilation.error');\n          } else if ($scope.cdash.buildgroups[i].numconfigureerror > 0) {\n            $scope.cdash.buildgroups[i].orderByFields.push('-configure.error');\n          } if ($scope.cdash.buildgroups[i].numtestfail > 0) {\n            $scope.cdash.buildgroups[i].orderByFields.push('-test.fail');\n          }\n          $scope.cdash.buildgroups[i].orderByFields.push('builddatefull');\n        } else if (!('sorttype' in $scope.cdash.buildgroups[i])) {\n          // By default, sort by errors & such in the following priority order:\n          // configure errors\n          if ($scope.cdash.buildgroups[i].numconfigureerror > 0) {\n            $scope.cdash.buildgroups[i].orderByFields.push('-configure.error');\n          }\n          // build errors\n          if ($scope.cdash.buildgroups[i].numbuilderror > 0) {\n            $scope.cdash.buildgroups[i].orderByFields.push('-compilation.error');\n          }\n          // tests failed\n          if ($scope.cdash.buildgroups[i].numtestfail > 0) {\n            $scope.cdash.buildgroups[i].orderByFields.push('-test.fail');\n          }\n          // tests not run\n          if ($scope.cdash.buildgroups[i].numtestnotrun > 0) {\n            $scope.cdash.buildgroups[i].orderByFields.push('-test.notrun');\n          }\n          // configure warnings\n          if ($scope.cdash.buildgroups[i].numconfigurewarning > 0) {\n            $scope.cdash.buildgroups[i].orderByFields.push('-configure.warning');\n          }\n          // build warnings\n          if ($scope.cdash.buildgroups[i].numbuildwarning > 0) {\n            $scope.cdash.buildgroups[i].orderByFields.push('-compilation.warning');\n          }\n          $scope.cdash.buildgroups[i].orderByFields.push('-builddatefull');\n        } else if ($scope.cdash.buildgroups[i]['sorttype'] == 'time') {\n          // For continuous integration groups, the most recent builds\n          // should be at the top of the list.\n          $scope.cdash.buildgroups[i].orderByFields.push('-builddatefull');\n        }\n      }\n\n      // Initialize paginated results.\n      $scope.cdash.buildgroups[i].builds = $filter('orderBy')($scope.cdash.buildgroups[i].builds, $scope.cdash.buildgroups[i].orderByFields);\n      $scope.cdash.buildgroups[i].builds = $filter('showEmptyBuildsLast')($scope.cdash.buildgroups[i].builds, $scope.cdash.buildgroups[i].orderByFields);\n\n      // Mark this group has having \"normal\" builds if it only contains missing & expected builds.\n      if (!$scope.cdash.buildgroups[i].hasnormalbuilds && !$scope.cdash.buildgroups[i].hasparentbuilds && $scope.cdash.buildgroups[i].builds.length > 0) {\n        $scope.cdash.buildgroups[i].hasnormalbuilds = true;\n      }\n\n      $scope.pageChanged($scope.cdash.buildgroups[i]);\n    }\n\n    // Check for label filters\n    $scope.cdash.extrafilterurl = '';\n    if ($scope.cdash.sharelabelfilters) {\n      $scope.cdash.extrafilterurl = filters.getLabelString($scope.cdash.filterdata);\n    }\n\n    // Read simple/advanced view cookie setting.\n    var advanced_cookie = $.cookie('cdash_'+$scope.cdash.projectname+'_advancedview');\n    var show_time_columns = 0;\n    if(advanced_cookie == 1) {\n      $scope.cdash.advancedview = 1;\n      if ($scope.cdash.showstarttime) {\n        // Don't show time columns for all-at-once subproject builds.\n        // This situation is identified by showstarttime being false.\n        show_time_columns = 1;\n      }\n    } else {\n      $scope.cdash.advancedview = 0;\n    }\n    $scope.cdash.showtimecolumns = show_time_columns;\n\n    // Should we show the Test Time column?\n    if (!$scope.cdash.showtesttime) {\n      $scope.cdash.showtesttime =\n        $scope.cdash.advancedview != 0 && $scope.cdash.showstarttime;\n    }\n\n    // Determine if we should display any extra columns in the 'Test' section.\n    $scope.cdash.extratestcolumns = 0;\n    if ($scope.cdash.showtesttime) {\n      $scope.cdash.extratestcolumns += 1;\n    }\n    if ($scope.cdash.advancedview && $scope.cdash.showProcTime) {\n      $scope.cdash.extratestcolumns += 1;\n    }\n\n    $scope.cdash.numcolumns = 14 + $scope.cdash.extratestcolumns + $scope.cdash.displaylabels;\n\n    if (!$scope.cdash.feed_enabled) {\n      $scope.showFeed = false;\n    }\n\n    var projectid = $scope.cdash.projectid;\n    if (projectid > 0 && $scope.cdash.feed) {\n      // Setup the feed.  This functionality used to live in cdashFeed.js.\n      setInterval(function() {\n        if($scope.showFeed) {\n          $(\"#feed\").load(\"ajax/getfeed.php?projectid=\"+projectid,{},function(){$(this).fadeIn('slow');})\n        }\n      }, 30000); // 30s\n    }\n\n    // Expose the jumpToAnchor function to the scope.\n    // This allows us to call it from the HTML template.\n    $scope.jumpToAnchor = anchors.jumpToAnchor;\n\n    // Honor any intra-page anchor specified in the URI.\n    if ($location.hash() != '') {\n      anchors.jumpToAnchor($location.hash());\n    }\n\n  };\n\n\n  $scope.toggleFeed = function() {\n    if ($scope.loading) { return; }\n    $scope.showFeed = !$scope.showFeed;\n    if($scope.showFeed) {\n      $.cookie('cdash_hidefeed', null);\n      $(\"#feed\").load(\"ajax/getfeed.php?projectid=\"+$scope.cdash.projectid,{},function(){$(this).fadeIn('slow');});\n      }\n    else {\n      $.cookie('cdash_hidefeed',1);\n    }\n  };\n\n\n  $scope.toggleAdvancedView = function() {\n    if ($scope.cdash.advancedview == 1) {\n      $scope.cdash.advancedview = 0;\n    } else {\n      $scope.cdash.advancedview = 1;\n    }\n    $.cookie('cdash_'+$scope.cdash.projectname+'_advancedview', $scope.cdash.advancedview);\n    window.location.reload(true);\n  };\n\n\n  $scope.toggleTimelineChart = function() {\n    if ($scope.showTimelineChart) {\n      $scope.showTimelineChart = false;\n      $.cookie('cdash_timelinechart', null);\n    } else {\n      $scope.showTimelineChart = true;\n      $.cookie('cdash_timelinechart', 1);\n    }\n  };\n\n\n  // The following functions were moved here from cdashBuildGroup.js\n  $scope.URLencode = function(sStr) {\n    return escape(sStr)\n      .replace(/\\+/g, '%2B')\n      .replace(/\\\"/g,'%22')\n      .replace(/\\'/g, '%27');\n  };\n\n  $scope.toggleAdminOptions = function(build) {\n    if (!(\"expectedandmissing\" in build) &&\n        (!(\"expected\" in build) || (build.expected != 0 && build.expected != 1))) {\n      build.loading = 1;\n      // Determine whether or not this is an expected build.\n      $http({\n        url: 'api/v1/is_build_expected.php',\n        method: 'GET',\n        params: { 'buildid': build.id }\n      }).then(function success(s) {\n        var response = s.data;\n        build.loading = 0;\n        if (\"expected\" in response) {\n          build.expected = response.expected;\n          if ( !(\"showAdminOptions\" in build) || build.showAdminOptions == 0) {\n            build.showAdminOptions = 1;\n          } else {\n            build.showAdminOptions = 0;\n          }\n        }\n      });\n    } else {\n      if ( !(\"showAdminOptions\" in build) || build.showAdminOptions == 0) {\n        build.showAdminOptions = 1;\n      } else {\n        build.showAdminOptions = 0;\n      }\n    }\n  };\n\n  $scope.toggleBuildProblems = function(build) {\n    if (!('hasErrors' in build)) {\n      build.loading = 1;\n      $http({\n        url: 'api/v1/build.php',\n        method: 'GET',\n        params: {\n          'buildid': build.id,\n          'getproblems': 1\n        }\n      }).then(function success(s) {\n        var response = s.data;\n        build.loading = 0;\n        build.showProblems = 1;\n\n        build.hasErrors = response.hasErrors;\n        build.failingSince = response.failingSince;\n        build.failingDate = response.failingDate;\n        build.daysWithErrors = response.daysWithErrors;\n\n        build.hasFailingTests = response.hasFailingTests;\n        build.testsFailingSince = response.testsFailingSince;\n        build.testsFailingDate = response.testsFailingDate;\n        build.daysWithFailingTests = response.daysWithFailingTests;\n      });\n    } else {\n      if (build.showProblems == 0) {\n        build.showProblems = 1;\n      } else {\n        build.showProblems = 0;\n      }\n    }\n  };\n\n  $scope.toggleExpectedInfo = function(build) {\n    if (!('lastSubmission' in build)) {\n      build.loading = 1;\n      $http({\n        url: 'api/v1/expectedbuild.php',\n        method: 'GET',\n        params: {\n          'siteid': build.siteid,\n          'groupid': build.buildgroupid,\n          'name': build.buildname,\n          'type': build.buildtype,\n          'currenttime': $scope.cdash.unixtimestamp\n        }\n      }).then(function success(s) {\n        var response = s.data;\n        build.loading = 0;\n        build.showExpectedInfo = 1;\n        build.lastSubmission = response.lastSubmission;\n        build.lastSubmissionDate = response.lastSubmissionDate;\n        build.daysSinceLastBuild = response.daysSinceLastBuild;\n      });\n    } else {\n      if (build.showExpectedInfo == 0) {\n        build.showExpectedInfo = 1;\n      } else {\n        build.showExpectedInfo = 0;\n      }\n    }\n  };\n\n  $scope.showModal = function (buildid) {\n    modalSvc.showModal(buildid, $scope.removeBuild, 'modal-template');\n  }\n\n  $scope.removeBuild = function(build) {\n    var parameters = { buildid: build.id };\n      $http({\n        url: 'api/v1/build.php',\n        method: 'DELETE',\n        params: parameters\n      }).then(function success() {\n        $scope.removeBuildFromScope(build);\n    });\n  };\n\n  $scope.removeBuildFromScope = function(build) {\n    // Find the build to remove in its group.\n    var idx1 = -1;\n    var idx2 = -1;\n    for (var i = 0, len1 = $scope.cdash.buildgroups.length; i < len1; i++) {\n      for (var j = 0, len2 = $scope.cdash.buildgroups[i].builds.length; j < len2; j++) {\n        if ($scope.cdash.buildgroups[i].builds[j] === build) {\n          idx1 = i;\n          idx2 = j;\n          break;\n        }\n      }\n      if (idx1 != -1) {\n        break;\n      }\n    }\n    if (idx1 > -1 && idx2 > -1) {\n      // Remove the build from our scope.\n      $scope.cdash.buildgroups[idx1].builds.splice(idx2, 1);\n      $scope.pageChanged($scope.cdash.buildgroups[idx1]);\n    }\n  };\n\n  $scope.toggleDone = function(build) {\n    var newDoneValue = 1;\n    if (build.done == 1) {\n      newDoneValue = 0;\n    }\n    var parameters = {\n      buildid: build.id,\n      done: newDoneValue\n    };\n    $http.post('api/v1/build.php', parameters)\n    .then(function success() {\n      build.done = newDoneValue;\n    });\n  };\n\n  $scope.toggleExpected = function(build, groupid) {\n    if (build.expectedandmissing == 1) {\n      // Delete a rule specifying a missing expected build.\n      var parameters = {\n        siteid: build.siteid,\n        groupid: build.buildgroupid,\n        name: build.buildname,\n        type: build.buildtype\n      };\n      $http({\n        url: 'api/v1/expectedbuild.php',\n        method: 'DELETE',\n        params: parameters\n      }).then(function success() {\n        $scope.removeBuildFromScope(build);\n      });\n    } else {\n      var newExpectedValue = 1;\n      if (build.expected == 1) {\n        newExpectedValue = 0;\n      }\n      var parameters = {\n        buildid: build.id,\n        groupid: groupid,\n        expected: newExpectedValue\n      };\n      $http.post('api/v1/build.php', parameters)\n      .then(function success() {\n        build.expected = newExpectedValue;\n      });\n    }\n  };\n\n  $scope.toggleAutoRefresh = function() {\n    var refresh_cookie = $.cookie('cdash_refresh');\n    if(refresh_cookie) {\n      // Disable autorefresh and remove the cookie.\n      $timeout.cancel(timer);\n      $scope.autoRefresh = false;\n      $.cookie('cdash_refresh', null);\n    } else {\n      $.cookie('cdash_refresh', 1);\n      window.location.reload(true);\n    }\n  };\n\n  $scope.moveToGroup = function(build, groupid) {\n    if (build.expectedandmissing == 1) {\n      var parameters = {\n        siteid: build.siteid,\n        groupid: build.buildgroupid,\n        newgroupid: groupid,\n        name: build.buildname,\n        type: build.buildtype\n      };\n      $http.post('api/v1/expectedbuild.php', parameters)\n      .then(function success() {\n        window.location.reload();\n      });\n    } else {\n      var parameters = {\n        buildid: build.id,\n        newgroupid: groupid,\n        expected: build.expected\n      };\n      $http.post('api/v1/build.php', parameters)\n      .then(function success() {\n        window.location.reload();\n      });\n    }\n  };\n\n  $scope.colorblind_toggle = function() {\n    if ($scope.cdash.filterdata.colorblind) {\n      $rootScope.cssfile = \"colorblind\";\n      $.cookie(\"colorblind\", 1, { expires: 365 } );\n\n    } else {\n      $rootScope.cssfile = \"cdash\";\n      $.cookie(\"colorblind\", 0, { expires: 365 } );\n    }\n  };\n\n  $scope.showfilters_toggle = function() {\n    $scope.showfilters = !$scope.showfilters;\n    filters.toggle($scope.showfilters);\n  };\n\n  $scope.numBuildsPerPageChanged = function(obj) {\n    $.cookie(\"num_builds_per_page\", obj.pagination.numPerPage, { expires: 365 });\n    $scope.pageChanged(obj);\n  };\n\n  $scope.pageChanged = function(obj) {\n    var begin = ((obj.pagination.currentPage - 1) * obj.pagination.numPerPage)\n    , end = begin + obj.pagination.numPerPage;\n    if (end > 0) {\n      obj.pagination.filteredBuilds = obj.builds.slice(begin, end);\n    } else {\n      obj.pagination.filteredBuilds = obj.builds;\n    }\n  };\n\n  $scope.updateOrderByFields = function(obj, field, $event, whichTable) {\n    whichTable = whichTable || 'buildgroup';\n    var cookie_name = '';\n    multisort.updateOrderByFields(obj, field, $event);\n    switch (whichTable) {\n      case 'buildgroup':\n      default:\n        cookie_name = $scope.getCookieName(obj, $scope.cdash.projectname, $scope.cdash.childview);\n        obj.builds = $filter('orderBy')(obj.builds, obj.orderByFields);\n        obj.builds = $filter('showEmptyBuildsLast')(obj.builds, obj.orderByFields);\n        $scope.pageChanged(obj);\n        break;\n      case 'coverage':\n        cookie_name = 'cdash_' + $scope.cdash.projectname + '_coverage_sort';\n        break;\n      case 'DA':\n        cookie_name = 'cdash_' + $scope.cdash.projectname + '_DA_sort';\n        break;\n      case 'subproject':\n        cookie_name = 'cdash_' + $scope.cdash.projectname + '_subproject_sort';\n        break;\n    }\n    // Save the new sort order in a cookie.\n    $.cookie(cookie_name, obj.orderByFields);\n  };\n\n  $scope.normalBuild = function(build) {\n    return build.numchildren == 0 || build.expectedandmissing == 1;\n  };\n\n  $scope.parentBuild = function(build) {\n    return build.numchildren > 0 || build.expectedandmissing == 1;\n  };\n\n  $scope.getCookieName = function(buildgroup, projectname, childview) {\n    var cookie_name = 'cdash_' + projectname;\n    if (childview == 1) {\n      cookie_name += '_child_index';\n    } else {\n      cookie_name += '_index';\n    }\n    cookie_name += buildgroup.name;\n    cookie_name += '_sort';\n    return cookie_name;\n  };\n\n});\n","CDash.filter('filter_builds', function() {\n  // Filter the builds based on what group they belong to.\n  return function(input, group) {\n    if (typeof group === 'undefined' || group === null) {\n      // No filtering required for default \"All\" group.\n      return input;\n    }\n\n    group_id = Number(group.id);\n    var output = [];\n    for (var i = 0; i < input.length; i++) {\n      if (Number(input[i].groupid) === group_id) {\n        output.push(input[i]);\n      }\n\n    }\n    return output;\n  };\n})\n\n.filter('filter_buildgroups', function() {\n  // Filter BuildGroups based on their type\n  return function(input, type) {\n    if (typeof type === 'undefined' || type === null) {\n      return input;\n    }\n    var output = [];\n    for (var i = 0; i < input.length; i++) {\n      if (input[i].type === type) {\n        output.push(input[i]);\n      }\n    }\n    return output;\n  };\n})\n\n.controller('ManageBuildGroupController', function ManageBuildGroupController($scope, $http, apiLoader, modalSvc) {\n  apiLoader.loadPageData($scope, 'api/v1/manageBuildGroup.php');\n  $scope.finishSetup = function() {\n    // Sort BuildGroups by position.\n    if ($scope.cdash.buildgroups) {\n      $scope.cdash.buildgroups.sort(function (a, b) {\n        return Number(a.position) - Number(b.position);\n      });\n\n      // Update positions when the user stops dragging.\n      $scope.sortable = {\n        stop: function(e, ui) {\n          for (var index in $scope.cdash.buildgroups) {\n            $scope.cdash.buildgroups[index].position = index;\n          }\n        }\n      };\n    }\n\n    // Define different types of buildgroups.\n    $scope.cdash.buildgrouptypes = [\n      {name: \"Daily\", value: \"Daily\"},\n      {name: \"Latest\", value: \"Latest\"}\n    ];\n    $scope.buildType = $scope.cdash.buildgrouptypes[0];\n  };\n\n  /** create a new buildgroup */\n  $scope.createBuildGroup = function(newBuildGroup, type) {\n    var parameters = {\n      projectid: $scope.cdash.projectid,\n      newbuildgroup: newBuildGroup,\n      type: type\n    };\n    $scope.cdash.buildgroup_error = '';\n    $http.post('api/v1/buildgroup.php', parameters)\n    .then(function success(s) {\n      if (s.status == 201) {\n        var buildgroup = s.data;\n        $(\"#buildgroup_created\").show();\n        $(\"#buildgroup_created\").delay(3000).fadeOut(400);\n\n        // Add this new buildgroup to our scope.\n        $scope.cdash.buildgroups.push(buildgroup);\n\n        if (type != \"Daily\") {\n          $scope.cdash.dynamics.push(buildgroup);\n        }\n      } else if (s.status == 200) {\n        // Trying to create a group that already exists.\n        $scope.cdash.buildgroup_error = \"A group named '\" + newBuildGroup + \"' already exists for this project.\";\n      }\n    }, function error(e) {\n      $scope.cdash.buildgroup_error = e.data.error;\n    });\n  };\n\n  /** change the order that the buildgroups appear in */\n  $scope.updateBuildGroupOrder = function() {\n    var newLayout = getSortedElements(\"#sortable\");\n    var parameters = {\n      projectid: $scope.cdash.projectid,\n      newLayout: newLayout\n    };\n    $http.post('api/v1/buildgroup.php', parameters)\n    .then(function success(s) {\n      if (s.data.error) {\n        $scope.cdash.error = s.data.error;\n      }\n      else {\n        $(\"#order_updated\").show();\n        $(\"#order_updated\").delay(3000).fadeOut(400);\n      }\n    });\n  };\n\n  /** modify an existing buildgroup */\n  $scope.saveBuildGroup = function(buildgroup, summaryemail) {\n    var parameters = {\n      projectid: $scope.cdash.projectid,\n      buildgroup: buildgroup\n    };\n    $http({\n      url: 'api/v1/buildgroup.php',\n      method: 'PUT',\n      params: parameters\n    }).then(function success(s) {\n      if (s.data.error) {\n        $scope.cdash.error = s.data.error;\n      }\n      else {\n        $(\"#buildgroup_updated_\" + buildgroup.id).show();\n        $(\"#buildgroup_updated_\" + buildgroup.id).delay(3000).fadeOut(400);\n      }\n    });\n  };\n\n  /** delete a buildgroup */\n  $scope.deleteBuildGroup = function (buildgroupid) {\n    \"use strict\";\n    var parameters = {\n      projectid: $scope.cdash.projectid,\n      buildgroupid: buildgroupid\n    };\n    $http({\n      url: 'api/v1/buildgroup.php',\n      method: 'DELETE',\n      params: parameters\n    }).then(function success() {\n      // Find the index of the group to remove.\n      var index = -1;\n      for(var i = 0, len = $scope.cdash.buildgroups.length; i < len; i++) {\n        if ($scope.cdash.buildgroups[i].id === buildgroupid) {\n          index = i;\n          break;\n        }\n      }\n      if (index > -1) {\n        // Remove the buildgroup from our scope.\n        $scope.cdash.buildgroups.splice(index, 1);\n      }\n    });\n  };\n\n  /** displays confirmation modal **/\n  $scope.showModal = function(buildgroupid) {\n    modalSvc.showModal(buildgroupid, $scope.deleteBuildGroup, 'modal-template');\n  };\n\n  /** move builds to a different group */\n  $scope.moveBuilds = function(builds, group, expected) {\n    var parameters = {\n      projectid: $scope.cdash.projectid,\n      builds: builds,\n      group: group,\n      expected: expected\n    };\n    $http.post('api/v1/buildgroup.php', parameters)\n    .then(function success(s) {\n      if (s.data.error) {\n        $scope.cdash.error = s.data.error;\n      }\n      else {\n        $(\"#builds_moved\").show();\n        $(\"#builds_moved\").delay(3000).fadeOut(400);\n      }\n    });\n  };\n\n\n  /** Add rule for a wildcard BuildGroup */\n  $scope.addWildcardRule = function(group, type, nameMatch) {\n    var parameters = {\n      projectid: $scope.cdash.projectid,\n      group: group,\n      type: type,\n      nameMatch: nameMatch\n    };\n    $http.post('api/v1/buildgroup.php', parameters)\n    .then(function success(s) {\n      if (s.data.error) {\n        $scope.cdash.error = s.data.error;\n      }\n      else {\n        $(\"#wildcard_defined\").show();\n        $(\"#wildcard_defined\").delay(3000).fadeOut(400);\n      }\n    });\n  };\n\n\n  /** delete a wildcard rule */\n  $scope.deleteWildcardRule = function(wildcard) {\n    var parameters = {\n      projectid: $scope.cdash.projectid,\n      wildcard: wildcard\n    };\n    $http({\n      url: 'api/v1/buildgroup.php',\n      method: 'DELETE',\n      params: parameters\n    }).then(function success() {\n      // Find the index of the wildcard to remove.\n      var index = $scope.cdash.wildcards.indexOf(wildcard);\n      if (index > -1) {\n        // Remove this wildcard from our scope.\n        $scope.cdash.wildcards.splice(index, 1);\n      }\n    });\n  };\n\n\n  /** add a build row to a dynamic group */\n  $scope.addDynamicRow = function(dynamic, buildgroup, site, match) {\n    var parameters = {\n      projectid: $scope.cdash.projectid,\n      dynamic: dynamic,\n      buildgroup: buildgroup,\n      site: site,\n      match: match\n    };\n    $http.post('api/v1/buildgroup.php', parameters)\n    .then(function success(s) {\n      if (s.data.error) {\n        $scope.cdash.error = s.data.error;\n      }\n      else {\n        // Add this new rule to our scope.\n        var idx = $scope.cdash.dynamics.indexOf(dynamic);\n        if (idx > -1) {\n          if ($scope.cdash.dynamics[idx].rules) {\n            $scope.cdash.dynamics[idx].rules.push(s.data);\n          } else {\n            $scope.cdash.dynamics[idx].rules = [s.data];\n          }\n        }\n        $(\"#dynamic_defined\").show();\n        $(\"#dynamic_defined\").delay(3000).fadeOut(400);\n      }\n    });\n  };\n\n  $scope.deleteDynamicRule = function(dynamic, rule) {\n    var parameters = {\n      projectid: $scope.cdash.projectid,\n      dynamic: dynamic,\n      rule: rule\n    };\n    $http({\n      url: 'api/v1/buildgroup.php',\n      method: 'DELETE',\n      params: parameters\n    }).then(function success() {\n      // Find the index of the dynamic group in question.\n      var idx1 = $scope.cdash.dynamics.indexOf(dynamic);\n      if (idx1 > -1) {\n        // Then find the index of the rule that's being removed.\n        var idx2 = $scope.cdash.dynamics[idx1].rules.indexOf(rule);\n        if (idx2 > -1) {\n          // And remove it from our scope.\n          $scope.cdash.dynamics[idx1].rules.splice(idx2, 1);\n        }\n      }\n    });\n  };\n\n\n});\n","CDash.controller('ManageMeasurementsController',\n  function ManageMeasurementsController($http, $scope, apiLoader, modalSvc) {\n    apiLoader.loadPageData($scope, 'api/v1/manageMeasurements.php');\n\n    $scope.finishSetup = function() {\n      // Mark all measurements as clean (unmodified).\n      for (var i = 0, len = $scope.cdash.measurements.length; i < len; i++) {\n        $scope.cdash.measurements[i].dirty = false;\n      }\n      // Create a blank measurement for the user to fill out.\n      $scope.newMeasurement();\n    };\n\n    $scope.newMeasurement = function() {\n      $scope.cdash.newmeasurement = {\n        id: -1,\n        dirty: false,\n        name: '',\n        summarypage: 1,\n        testpage: 1\n      };\n    };\n\n    // Save measurements to database.\n    $scope.save = function() {\n      var measurements_to_save = [];\n      // Gather up all the modified measurements.\n      for (var i = 0, len = $scope.cdash.measurements.length; i < len; i++) {\n        if ($scope.cdash.measurements[i].dirty) {\n          measurements_to_save.push($scope.cdash.measurements[i]);\n        }\n      }\n\n      // Also save the new measurement if the user filled it out.\n      if ($scope.cdash.newmeasurement.name != '') {\n        measurements_to_save.push($scope.cdash.newmeasurement);\n      }\n\n      // Submit the request.\n      var parameters = {\n        projectid: $scope.cdash.projectid,\n        measurements: measurements_to_save\n      };\n      $http.post('api/v1/manageMeasurements.php', parameters)\n      .then(function success(s) {\n        $(\"#save_complete\").show();\n        $(\"#save_complete\").delay(3000).fadeOut(400);\n        if (s.data.id > 0) {\n          // Assign an id to the \"new\" measurement and create a new blank one\n          // for the user to fill out.\n          $scope.cdash.newmeasurement.id = s.data.id;\n          $scope.cdash.measurements.push($scope.cdash.newmeasurement);\n          $scope.newMeasurement();\n        }\n      }, function error(e) {\n        $scope.cdash.error = e.data.error;\n      });\n    };\n\n    // Display confirmation dialog before deleting a measurement.\n    $scope.confirmDelete = function(measurement) {\n      modalSvc.showModal(measurement.id, $scope.removeMeasurement, 'modal-template');\n    }\n\n    // Remove measurement upon confirmation.\n    $scope.removeMeasurement = function(id_to_remove) {\n      var parameters = {\n        projectid: $scope.cdash.projectid,\n        id: id_to_remove\n      };\n      $http({\n        url: 'api/v1/manageMeasurements.php',\n        method: 'DELETE',\n        params: parameters\n      }).then(function success() {\n        // Find the measurement to remove.\n        for (var i = 0, len = $scope.cdash.measurements.length; i < len; i++) {\n          if ($scope.cdash.measurements[i].id === id_to_remove) {\n            // Remove it from our scope.\n            $scope.cdash.measurements.splice(i, 1);\n            break;\n          }\n        }\n      });\n    };\n});\n","CDash.controller('ManageOverviewController', function ManageOverviewController($scope, $http, apiLoader) {\n  apiLoader.loadPageData($scope, 'api/v1/manageOverview.php');\n  $scope.finishSetup = function() {\n    // Setup sortable elements.\n    $scope.buildSortable = {\n      stop: function(e, ui) {\n        for (var index in $scope.cdash.buildcolumns) {\n          $scope.cdash.buildcolumns[index].position = index;\n        }\n      }\n    };\n    $scope.staticSortable = {\n      stop: function(e, ui) {\n        for (var index in $scope.cdash.staticrows) {\n          $scope.cdash.staticrows[index].position = index;\n        }\n      }\n    };\n  };\n\n  $scope.addBuildColumn = function(column) {\n    var index = $scope.cdash.availablegroups.indexOf(column);\n    $scope.cdash.availablegroups.splice(index, 1);\n    $scope.cdash.buildcolumns.push(column);\n  };\n\n  $scope.removeBuildColumn = function(column) {\n    var index = $scope.cdash.buildcolumns.indexOf(column);\n    $scope.cdash.buildcolumns.splice(index, 1);\n    $scope.cdash.availablegroups.push(column);\n  };\n\n  $scope.addStaticRow = function(row) {\n    var index = $scope.cdash.availablegroups.indexOf(row);\n    $scope.cdash.availablegroups.splice(index, 1);\n    $scope.cdash.staticrows.push(row);\n  };\n\n  $scope.removeStaticRow = function(row) {\n    var index = $scope.cdash.staticrows.indexOf(row);\n    $scope.cdash.staticrows.splice(index, 1);\n    $scope.cdash.availablegroups.push(row);\n  };\n\n  $scope.saveLayout = function() {\n    // Mark all build and static components as such.\n    var buildElements = getSortedElements('#buildSortable');\n    for (i = 0; i < buildElements.length; ++i) {\n      buildElements[i]['type'] = 'build';\n    }\n    var staticElements = getSortedElements('#staticSortable');\n    for (i = 0; i < staticElements.length; ++i) {\n      staticElements[i]['type'] = 'static';\n    }\n\n    // Concatenate them together and format as JSON.\n    var newLayout = JSON.stringify(buildElements.concat(staticElements));\n\n    $(\"#loading\").attr(\"src\", \"img/loading.gif\");\n\n    var parameters = {\n      projectid: $scope.cdash.projectid,\n      saveLayout: newLayout\n    };\n    $http.post('api/v1/manageOverview.php', parameters)\n    .then(function success() {\n      $(\"#loading\").attr(\"src\", \"img/check.gif\");\n    });\n  };\n});\n","CDash.filter('filter_subproject_groups', function() {\n  // Filter the subprojects based on group.\n  return function(input, group) {\n    if (typeof group === 'undefined' || group === null) {\n      // \"No filtering required for default \"All\" group.\n      return input;\n    }\n\n    group_id = Number(group.id);\n    var output = [];\n    for (var key in input) {\n      if (Number(input[key].group) === group_id) {\n        output.push(input[key]);\n      }\n\n    }\n    return output;\n  };\n})\n.controller('ManageSubProjectController', function ManageSubProjectController($scope, $http, apiLoader) {\n  apiLoader.loadPageData($scope, 'api/v1/manageSubProject.php');\n  $scope.finishSetup = function() {\n    // Sort groups by position.\n    if ($scope.cdash.groups) {\n      $scope.cdash.groups.sort(function (a, b) {\n        return Number(a.position) - Number(b.position);\n      });\n    }\n\n    // Update positions when the user stops dragging.\n    $scope.sortable = {\n      stop: function(e, ui) {\n        for (var index in $scope.cdash.groups) {\n          $scope.cdash.groups[index].position = index;\n        }\n      }\n    };\n  };\n\n  $scope.createSubProject = function(newSubProject, groupName) {\n    var parameters = {\n      projectid: $scope.cdash.projectid,\n      newsubproject: newSubProject,\n      group: groupName\n    };\n    $http.post('api/v1/subproject.php', parameters)\n    .then(function success(s) {\n      var subproj = s.data;\n      if (subproj.error) {\n        $scope.cdash.error = subproj.error;\n      }\n      else {\n        $(\"#subproject_created\").show();\n        $(\"#subproject_created\").delay(3000).fadeOut(400);\n\n        // Add this new subproject to our scope.\n        $scope.cdash.subprojects.push(subproj);\n      }\n    });\n  };\n\n  $scope.createGroup = function(newGroup, threshold, isDefault) {\n    var parameters = {\n      projectid: $scope.cdash.projectid,\n      newgroup: newGroup,\n      threshold: threshold,\n      isdefault: isDefault\n    };\n    $http.post('api/v1/subproject.php', parameters)\n    .then(function success(s) {\n      var group = s.data;\n\n      // Update our default group if necessary.\n      if (group.is_default) {\n        $scope.cdash.default_group_id = group.id;\n      }\n\n      // Add this new group to our scope.\n      $scope.cdash.groups.push(group);\n    });\n  };\n\n  $scope.updateGroup = function(group, is_default) {\n    var parameters = {\n      projectid: $scope.cdash.projectid,\n      groupid: group.id,\n      name: group.name,\n      threshold: group.coverage_threshold,\n      is_default: is_default\n    };\n    $http({\n      url: 'api/v1/subproject.php',\n      method: 'PUT',\n      params: parameters\n    }).then(function success(s) {\n      if (s.data.error) {\n        $scope.cdash.error = s.data.error;\n      }\n      else {\n        $(\"#group_updated_\" + group.id).show();\n        $(\"#group_updated_\" + group.id).delay(3000).fadeOut(400);\n      }\n    });\n  };\n\n  $scope.deleteGroup = function(groupId) {\n    var parameters = {\n      projectid: $scope.cdash.projectid,\n      groupid: groupId\n    };\n    $http({\n      url: 'api/v1/subproject.php',\n      method: 'DELETE',\n      params: parameters\n    }).then(function success() {\n      // Find the index of the group to remove.\n      var index = -1;\n      for(var i = 0, len = $scope.cdash.groups.length; i < len; i++) {\n        if ($scope.cdash.groups[i].id === groupId) {\n          index = i;\n          break;\n        }\n      }\n      if (index > -1) {\n        // Remove the group from our scope.\n        $scope.cdash.groups.splice(index, 1);\n      }\n    });\n  };\n\n  /** Change the order that the groups appear in. */\n  $scope.updateGroupOrder = function() {\n    var newLayout = getSortedElements(\"#sortable\");\n    var parameters = {\n      projectid: $scope.cdash.projectid,\n      newLayout: newLayout\n    };\n    $http.post('api/v1/subproject.php', parameters)\n    .then(function success(s) {\n      if (s.data.error) {\n        $scope.cdash.error = s.data.error;\n      }\n      else {\n        $(\"#order_updated\").show();\n        $(\"#order_updated\").delay(3000).fadeOut(400);\n      }\n    });\n  };\n\n});\n","CDash.controller('OverviewController',\n  function OverviewController($scope, $location, anchors, apiLoader) {\n    apiLoader.loadPageData($scope, 'api/v1/overview.php');\n    $scope.finishSetup = function() {\n      // Expose the jumpToAnchor function to the scope.\n      // This allows us to call it from the HTML template.\n      $scope.jumpToAnchor = anchors.jumpToAnchor;\n\n      // Honor any intra-page anchor specified in the URI.\n      if ($location.hash() != '') {\n        anchors.jumpToAnchor($location.hash());\n      }\n    };\n});\n\nCDash.directive('linechart', function() {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n      data: '=data',\n      groupname: '=groupname',\n      measurementname: '=measurementname',\n      project: '=project',\n      anchor: '=anchor',\n      sort: '=sort'\n    },\n    template: '<div class=\"overview-line-chart\"/>',\n    link: function(scope, element, attrs) {\n      if (scope.groupname) {\n        var data = JSON.parse(scope.data);\n        if (data.length > 0) {\n          element[0].id = scope.groupname + \"_\" + scope.measurementname + \"_chart\";\n          makeLineChart(element[0].id, data, scope.project, scope.anchor, scope.sort);\n        }\n      }\n    }\n  };\n});\n\nCDash.directive('bulletchart', function() {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n      data: '=data',\n      categoryname: '=categoryname',\n    },\n    template: '<div class=\"overview-bullet-chart\"><svg></svg></div>',\n    link: function(scope, element, attrs) {\n      if (scope.data) {\n        element[0].id = scope.data.name_clean + \"_\" + scope.categoryname + \"_bullet\";\n        var chart_data = JSON.parse(scope.data.chart),\n            chart_name = scope.group_name + \" \" + scope.data.name,\n            element_name = \"#\" + element[0].id + \" svg\";\n        makeBulletChart(\n          chart_name,\n          element_name,\n          scope.data.low,\n          scope.data.medium,\n          scope.data.satisfactory,\n          scope.data.current,\n          scope.data.previous,\n          25);\n      }\n    }\n  };\n});\n","CDash.controller('QueryTestsController',\n  function QueryTestsController($scope, $rootScope, $filter, apiLoader, filters, multisort) {\n    $scope.loading = true;\n\n    // Pagination settings.\n    $scope.pagination = [];\n    $scope.pagination.filteredBuilds = [];\n    $scope.pagination.currentPage = 1;\n    $scope.pagination.maxSize = 5;\n\n    // Check if we have a cookie for number of tests to display.\n    var num_per_page_cookie = $.cookie('queryTests_num_per_page');\n    if(num_per_page_cookie) {\n      $scope.pagination.numPerPage = parseInt(num_per_page_cookie);\n    } else {\n      $scope.pagination.numPerPage = 25;\n    }\n\n    // Hide filters by default.\n    $scope.showfilters = false;\n\n    // Check for filters\n    $rootScope.queryString['filterstring'] = filters.getString();\n\n    // Check for sort order cookie.\n    var sort_order = [];\n    var sort_cookie_value = $.cookie('cdash_query_tests_sort');\n    if(sort_cookie_value) {\n      sort_order = sort_cookie_value.split(\",\");\n    }\n    $scope.orderByFields = sort_order;\n\n    apiLoader.loadPageData($scope, 'api/v1/queryTests.php');\n    $scope.finishSetup = function() {\n      // Hide test output context by default.\n      $scope.cdash.showmatchingoutput = false;\n\n      // Check for label filters\n      $scope.cdash.extrafilterurl = filters.getLabelString($scope.cdash.filterdata);\n      $scope.cdash.builds = $filter('orderBy')($scope.cdash.builds, $scope.orderByFields);\n      $scope.pageChanged();\n    };\n\n    $scope.showfilters_toggle = function() {\n      $scope.showfilters = !$scope.showfilters;\n      filters.toggle($scope.showfilters);\n    };\n\n\n    $scope.pageChanged = function() {\n      var begin = (($scope.pagination.currentPage - 1) * $scope.pagination.numPerPage)\n      , end = begin + $scope.pagination.numPerPage;\n      if (end > 0) {\n        $scope.pagination.filteredBuilds = $scope.cdash.builds.slice(begin, end);\n      } else {\n        $scope.pagination.filteredBuilds = $scope.cdash.builds;\n      }\n    };\n\n    $scope.updateOrderByFields = function(field, $event) {\n      multisort.updateOrderByFields($scope, field, $event);\n      $scope.cdash.builds = $filter('orderBy')($scope.cdash.builds, $scope.orderByFields);\n      $scope.pageChanged();\n      $.cookie('cdash_query_tests_sort', $scope.orderByFields);\n    };\n\n    $scope.numTestsPerPageChanged = function() {\n      $.cookie(\"queryTests_num_per_page\", $scope.pagination.numPerPage, { expires: 365 });\n      $scope.pageChanged();\n    };\n\n    $scope.formSubmit = function() {\n      var uri = '//' + location.host + location.pathname + '?project=' + $scope.cdash.projectname_encoded;\n      uri += '&begin=' + $scope.cdash.begin + '&end=' + $scope.cdash.end;\n      uri += filters.getString();\n      window.location = uri;\n    };\n\n    $scope.toggleShowMatchingOutput = function() {\n      $scope.cdash.showmatchingoutput = !($scope.cdash.showmatchingoutput);\n    };\n});\n","CDash.controller('SubProjectController', function SubProjectController($scope, $rootScope, $http) {\n  $scope.dataLoaded = false;\n\n  $scope.loadData = function(id) {\n    if ($scope.dataLoaded) {\n      // Data already loaded, no need to do it again.\n      return;\n    }\n    else {\n      $rootScope.queryString['subprojectid'] = id;\n      $http({\n        url: 'api/v1/subproject.php',\n        method: 'GET',\n        params: $rootScope.queryString\n      }).then(function success(s) {\n        $scope.details = s.data;\n\n        // Create a reference to this subproject's group.\n        var index = -1;\n        for(var i = 0, len = $scope.cdash.groups.length; i < len; i++) {\n          if ($scope.cdash.groups[i].id === $scope.details.group) {\n            $scope.details.group = $scope.cdash.groups[i];\n            break;\n          }\n        }\n\n        $scope.dataLoaded = true;\n      });\n    }\n  };\n\n  $scope.deleteSubProject = function(id) {\n    var parameters = {\n      projectid: $scope.details.projectid,\n      subprojectid: id\n    };\n\n    $http({\n      url: 'api/v1/subproject.php',\n      method: 'DELETE',\n      params: parameters\n    }).then(function success() {\n      // Find the index of the subproject to remove.\n      var index = -1;\n      for(var i = 0, len = $scope.cdash.subprojects.length; i < len; i++) {\n        if ($scope.cdash.subprojects[i].id === id) {\n          index = i;\n          break;\n        }\n      }\n      if (index > -1) {\n        // Remove the subproject from our scope.\n        $scope.cdash.subprojects.splice(index, 1);\n      }\n    });\n  };\n\n  $scope.addDependency = function(dependency, subprojectId) {\n    var parameters = {\n      projectid: $scope.details.projectid,\n      subprojectid: subprojectId,\n      dependencyid: dependency.id\n    };\n\n    $http({\n      url: 'api/v1/subproject.php',\n      method: 'PUT',\n      params: parameters\n    }).then(function success() {\n      // Find the index of the dependency we just added.\n      var index = -1;\n      for(var i = 0, len = $scope.details.available_dependencies.length; i < len; i++) {\n        if ($scope.details.available_dependencies[i].id === dependency.id) {\n          index = i;\n          break;\n        }\n      }\n      if (index > -1) {\n        // Remove this subproject from our list of available dependencies.\n        var added = $scope.details.available_dependencies.splice(index, 1);\n        // And add it to our list of dependencies.\n        $scope.details.dependencies.push(added[0]);\n      }\n    });\n  };\n\n  $scope.removeDependency = function(dependencyId, subprojectId) {\n    var parameters = {\n      projectid: $scope.details.projectid,\n      subprojectid: subprojectId,\n      dependencyid: dependencyId\n    };\n\n    $http({\n      url: 'api/v1/subproject.php',\n      method: 'DELETE',\n      params: parameters\n    }).then(function success() {\n      // Find the index of the dependency to remove.\n      var index = -1;\n      for(var i = 0, len = $scope.details.dependencies.length; i < len; i++) {\n        if ($scope.details.dependencies[i].id === dependencyId) {\n          index = i;\n          break;\n        }\n      }\n      if (index > -1) {\n        // Remove this subproject from our list of dependencies.\n        var removed = $scope.details.dependencies.splice(index, 1);\n        // And add it to our list of potential dependencies.\n        $scope.details.available_dependencies.push(removed[0]);\n      }\n    });\n  };\n\n  $scope.changeGroup = function() {\n    var parameters = {\n      projectid: $scope.details.projectid,\n      subprojectid: $scope.details.subprojectid,\n      groupname: $scope.details.group.name\n    };\n    $http({\n      url: 'api/v1/subproject.php',\n      method: 'PUT',\n      params: parameters\n    }).then(function success() {\n      $(\"#group_changed_\" + $scope.details.subprojectid).show();\n      $(\"#group_changed_\" + $scope.details.subprojectid).delay(3000).fadeOut(400);\n    });\n  };\n\n});\n","CDash.controller('TestDetailsController',\n  function TestDetailsController($scope, $http, $window, apiLoader) {\n    apiLoader.loadPageData($scope, 'api/v1/testDetails.php');\n    $scope.finishSetup = function() {\n      $scope.cdash.showgraph = false;\n      $scope.cdash.showcommandline = false;\n      $scope.cdash.rawdatalink = '';\n      if ($scope.queryString.graph) {\n        $scope.cdash.graphSelection = $scope.queryString.graph;\n        $scope.display_graph();\n      }\n    };\n\n    $scope.toggle_commandline = function() {\n      $scope.cdash.showcommandline = !($scope.cdash.showcommandline);\n    };\n\n    $scope.display_graph = function() {\n      var testid = $scope.cdash.test.id;\n      var buildid = $scope.cdash.test.buildid;\n      var measurementname = $scope.cdash.graphSelection;\n      if ($scope.cdash.graphSelection === \"\") {\n        $scope.cdash.showgraph = false;\n        $(\"#graph_options\").html(\"\");\n        return;\n      }\n\n      $scope.cdash.showgraph = true;\n\n      var query_params = {\n        testid: testid,\n        buildid: buildid\n      };\n\n      var graph_type = '';\n      $scope.cdash.rawdatalink = 'api/v1/testGraph.php?testid=' + testid + '&buildid=' + buildid;\n      switch ($scope.cdash.graphSelection) {\n        case \"status\":\n          graph_type = 'status';\n          break;\n        case \"time\":\n          graph_type = 'time';\n          break;\n        default:\n          graph_type = 'measurement';\n          query_params.measurementname = measurementname;\n          $scope.cdash.rawdatalink += '&measurementname=' + measurementname;\n          break;\n      }\n      $scope.cdash.rawdatalink += '&type=' + graph_type;\n\n      query_params.type = graph_type;\n      $http({\n        url: 'api/v1/testGraph.php',\n        method: 'GET',\n        params: query_params\n      }).then(function success(s) {\n        $scope.test_graph(s.data, graph_type);\n      });\n\n    };\n\n    $scope.test_graph = function(response, graph_type) {\n      // Separate out build & test ids from the actual data points.\n      var buildids = {};\n      var testids = {};\n      var chart_data = [];\n      for (var i = 0; i < response.length; i++) {\n        var series = {};\n        series.label = response[i].label;\n        series.data = [];\n        for (var j = 0; j < response[i].data.length; j++) {\n          series.data.push([response[i].data[j]['x'], response[i].data[j]['y']]);\n          if (i == 0) {\n            buildids[response[i].data[j]['x']] = response[i].data[j]['buildid'];\n            testids[response[i].data[j]['x']] = response[i].data[j]['testid'];\n          }\n        }\n        chart_data.push(series);\n      }\n\n      // Options that are shared by all of our different types of charts.\n      var options = {\n        grid: {\n          backgroundColor: \"#fffaff\",\n          clickable: true,\n          hoverable: true,\n          hoverFill: '#444',\n          hoverRadius: 4\n        },\n        pan: { interactive: true },\n        zoom: { interactive: true, amount: 1.1 },\n        xaxis: { mode: \"time\" },\n        yaxis: {\n          zoomRange: false,\n          panRange: false\n        }\n      };\n\n      switch (graph_type) {\n        case \"status\":\n          // Circles for passed tests, crosses for failed tests.\n          chart_data[0].points = { symbol: 'circle'};\n          chart_data[1].points = { symbol: 'cross'};\n          options.series = {\n            points: {\n              show: true,\n              radius: 5\n            }\n          };\n          options.yaxis.ticks = [[-1, \"Failed\"], [1, \"Passed\"]];\n          options.yaxis.min = -1.2;\n          options.yaxis.max = 1.2;\n          options.colors = [\"#8aba5a\", \"#de6868\"];\n          break;\n\n        case \"time\":\n          // Show threshold series as a filled area.\n          chart_data[1].lines = { fill: true };\n          // The lack of a 'break' here is intentional.\n          // time & measurement charts share common options.\n        case \"measurement\":\n          options.lines = { show: true };\n          options.points = { show: true };\n          options.colors = [\"#0000FF\", \"#dba255\", \"#919733\"];\n          break;\n      }\n\n      $(\"#graph_holder\").bind(\"plotclick\", function (e, pos, item) {\n        if (item) {\n          plot.highlight(item.series, item.datapoint);\n          buildid = buildids[item.datapoint[0]];\n          testid = testids[item.datapoint[0]];\n          var url = \"testDetails.php?test=\" + testid + \"&build=\" + buildid + \"&graph=\" + $scope.cdash.graphSelection;\n          $window.open(url);\n        }\n       });\n\n      plot = $.plot(\n        $(\"#graph_holder\"), chart_data, options);\n\n      // Show tooltip on hover.\n      date_formatter = d3.time.format(\"%b %d, %I:%M:%S %p\");\n      $(\"#graph_holder\").bind(\"plothover\", function (event, pos, item) {\n        if (item) {\n          var x = date_formatter(new Date(item.datapoint[0])),\n              y = item.datapoint[1].toFixed(2);\n\n          $(\"#tooltip\").html(\n              \"<b>\" + x + \"</b><br/>\" +\n              item.series.label + \": <b>\" + y + \"</b>\")\n            .css({top: item.pageY+5, left: item.pageX+5})\n            .fadeIn(200);\n        } else {\n          $(\"#tooltip\").hide();\n        }\n      });\n    };\n\n    $scope.setup_compare = function() {\n      $('.je_compare').je_compare({caption: true});\n    };\n});\n","CDash.controller('TestOverviewController',\n  function TestOverviewController($scope, $rootScope, $filter, apiLoader, filters, multisort) {\n    $scope.groupChanged = false;\n\n    // Hide filters by default.\n    $scope.showfilters = false;\n\n    // Check for filters.\n    $rootScope.queryString['filterstring'] = filters.getString();\n\n    // Handle sort order.\n    var sort_order = [];\n    // First check if one was specified via query string.\n    if ('sort' in $rootScope.queryString) {\n      sort_order = $rootScope.queryString.sort.split(\",\");\n    } else {\n      // Next check for a sort order cookie.\n      var sort_cookie_value = $.cookie('cdash_test_overview_sort');\n      if(sort_cookie_value) {\n        sort_order = sort_cookie_value.split(\",\");\n      } else {\n        // Default sorting: put the most broken tests at the top of the list.\n        sort_order = ['-failpercent'];\n      }\n    }\n    $scope.orderByFields = sort_order;\n\n    // Pagination settings.\n    $scope.pagination = [];\n    $scope.pagination.filteredTests = [];\n    $scope.pagination.currentPage = 1;\n    $scope.pagination.maxSize = 5;\n\n    // Check if we have a cookie for number of tests to display.\n    var num_per_page_cookie = $.cookie('testOverview_num_per_page');\n    if(num_per_page_cookie) {\n      $scope.pagination.numPerPage = parseInt(num_per_page_cookie);\n    } else {\n      $scope.pagination.numPerPage = 10;\n    }\n\n    apiLoader.loadPageData($scope, 'api/v1/testOverview.php');\n\n    $scope.finishSetup = function() {\n      $scope.cdash.showpassedinitialvalue = $scope.cdash.showpassed;\n      $scope.cdash.tests = $filter('orderBy')($scope.cdash.tests, $scope.orderByFields);\n      $scope.pageChanged();\n\n      // Group selection.\n      var idx = $scope.cdash.groups.map(function(x) {return x.id; }).indexOf($scope.cdash.groupid);\n      if (idx < 0) {\n        idx = 0;\n      }\n      $scope.cdash.selectedGroup = $scope.cdash.groups[idx];\n    };\n\n    $scope.pageChanged = function() {\n      var begin = (($scope.pagination.currentPage - 1) * $scope.pagination.numPerPage)\n      , end = begin + $scope.pagination.numPerPage;\n      if (end > 0) {\n        $scope.pagination.filteredTests = $scope.cdash.tests.slice(begin, end);\n      } else {\n        $scope.pagination.filteredTests = $scope.cdash.tests;\n      }\n    };\n\n    $scope.numTestsPerPageChanged = function() {\n      $.cookie(\"testOverview_num_per_page\", $scope.pagination.numPerPage, { expires: 365 });\n      $scope.pageChanged();\n    };\n\n    $scope.showfilters_toggle = function() {\n      $scope.showfilters = !$scope.showfilters;\n      filters.toggle($scope.showfilters);\n    };\n\n    $scope.updateOrderByFields = function(field, $event) {\n      multisort.updateOrderByFields($scope, field, $event);\n      $scope.cdash.tests = $filter('orderBy')($scope.cdash.tests, $scope.orderByFields);\n      $scope.pageChanged();\n      $.cookie('cdash_test_overview_sort', $scope.orderByFields);\n    };\n\n    $scope.updateSelection = function() {\n      var uri = '//' + location.host + location.pathname + '?project=' + $scope.cdash.projectname_encoded;\n      // Include date range from time chart.\n      if ($scope.cdash.begin_date == $scope.cdash.end_date) {\n        uri += '&date=' + $scope.cdash.begin_date;\n      } else {\n        uri += '&begin=' + $scope.cdash.begin_date + '&end=' + $scope.cdash.end_date;\n      }\n      if ($scope.cdash.selectedGroup.id > 0) {\n        uri += '&group=' + $scope.cdash.selectedGroup.id;\n      }\n      if ($scope.cdash.showpassed == 1) {\n        uri += '&showpassed=1';\n      }\n      uri += filters.getString();\n      window.location = uri;\n    };\n});\n","CDash.controller('TestSummaryController',\n  function TestSummaryController($scope, apiLoader, multisort) {\n    // Hide filters and graph by default.\n    $scope.showfilters = false;\n    $scope.showgraph = false;\n    $scope.graphurl = '';\n\n    // Check for sort order cookie.\n    var sort_order = [];\n    var sort_cookie_value = $.cookie('cdash_test_summary_sort');\n    if(sort_cookie_value) {\n      sort_order = sort_cookie_value.split(\",\");\n    } else {\n      // Default sorting : status then site.\n      sort_order = ['status', 'site'];\n    }\n    $scope.orderByFields = sort_order;\n\n    apiLoader.loadPageData($scope, 'api/v1/testSummary.php');\n    $scope.finishSetup = function() {\n      $scope.graphurl = $scope.failureGraphUrl();\n    };\n\n    $scope.updateOrderByFields = function(field, $event) {\n      multisort.updateOrderByFields($scope, field, $event);\n      $.cookie('cdash_test_summary_sort', $scope.orderByFields);\n    };\n\n    $scope.failureGraphUrl = function() {\n      return 'ajax/showtestfailuregraph.php?testname=' + $scope.cdash.testName + '&projectid=' + $scope.cdash.projectid + '&starttime=' + $scope.cdash.currentstarttime;\n    };\n\n    $scope.resetZoom = function() {\n      // ng-include won't reload if graphurl doesn't change, so simply\n      // twiddle between URLs.\n      if ($scope.graphurl.indexOf(\"zoomout\") != -1) {\n        $scope.graphurl = $scope.failureGraphUrl();\n      } else {\n        $scope.graphurl = $scope.failureGraphUrl() + \"&zoomout=1\";\n      }\n    };\n\n});\n","CDash.controller('UserController', function UserController($scope, $http, $timeout, apiLoader) {\n  apiLoader.loadPageData($scope, 'api/v1/user.php');\n\n  $scope.deleteSchedule = function(job) {\n    if (window.confirm(\"Are you sure you want to delete this schedule?\")) {\n      var parameters = { removeschedule: job.id };\n      $http({\n        url: 'manageClient.php',\n        method: 'GET',\n        params: parameters\n      }).then(function success() {\n        // Find and remove this job schedule.\n        var index = -1;\n        for(var i = 0, len = $scope.cdash.jobschedule.length; i < len; i++) {\n          if ($scope.cdash.jobschedule[i].id === job.id) {\n            index = i;\n            break;\n          }\n        }\n        if (index > -1) {\n          $scope.cdash.jobschedule.splice(index, 1);\n        }\n      }, function error(e) {\n        $scope.cdash.message = e.data.error;\n      });\n    }\n  };\n\n  $scope.generateToken = function() {\n    var parameters = { description: $scope.cdash.tokendescription };\n    $http.post('api/v1/authtoken.php', parameters)\n    .then(function success(s) {\n      var authtoken = s.data.token;\n      authtoken.copied = false;\n      $scope.cdash.authtokens.push(authtoken);\n    }, function error(e) {\n      $scope.cdash.message = e.data.error;\n    });\n  };\n\n  $scope.copyTokenSuccess = function(token) {\n    token.copied = true;\n    token.showcheck = true;\n    $timeout(function() {\n      token.showcheck = false;\n    }, 2000);\n  };\n\n  $scope.revokeToken = function(authtoken) {\n    var parameters = { hash: authtoken.hash };\n    $http({\n      url: 'api/v1/authtoken.php',\n      method: 'DELETE',\n      params: parameters\n    }).then(function success() {\n      // Remove this token from our list.\n      var index = -1;\n      for(var i = 0, len = $scope.cdash.authtokens.length; i < len; i++) {\n        if ($scope.cdash.authtokens[i].hash === authtoken.hash) {\n          index = i;\n          break;\n        }\n      }\n      if (index > -1) {\n        $scope.cdash.authtokens.splice(index, 1);\n      }\n    }, function error(e) {\n      $scope.cdash.message = e.data.error;\n    });\n  };\n});\n","CDash.controller('UserStatisticsController',\n  function UserStatisticsController($scope, $filter, apiLoader, multisort) {\n    // Check for sort order cookie.\n    var sort_order = [];\n    var sort_cookie_value = $.cookie('cdash_user_stats_sort');\n    if(sort_cookie_value) {\n      sort_order = sort_cookie_value.split(\",\");\n    } else {\n      // Default sorting priority.  The goal here is to put the most active\n      // and helpful developers at the top of the list, with an emphasis\n      // towards rewarding good behavior as opposed to punishing errors.\n      sort_order = ['-totalupdatedfiles', '-fixed_errors', '-fixed_warnings',\n                    '-fixed_tests', 'failed_errors', 'failed_warnings',\n                    'failed_tests'];\n    }\n    $scope.orderByFields = sort_order;\n\n    apiLoader.loadPageData($scope, 'api/v1/userStatistics.php');\n    $scope.finishSetup = function() {\n      $scope.cdash.users = $filter('orderBy')($scope.cdash.users, $scope.orderByFields);\n    };\n\n    $scope.defaultSorting = function() {\n      $scope.orderByFields =\n        ['-totalupdatedfiles', '-fixed_errors', '-fixed_warnings',\n         '-fixed_tests', 'failed_errors', 'failed_warnings', 'failed_tests'];\n      $scope.cdash.users = $filter('orderBy')($scope.cdash.users, $scope.orderByFields);\n      $.cookie('cdash_user_stats_sort', null);\n    };\n\n    $scope.updateOrderByFields = function(field, $event) {\n      multisort.updateOrderByFields($scope, field, $event);\n      $scope.cdash.users = $filter('orderBy')($scope.cdash.users, $scope.orderByFields);\n      $.cookie('cdash_user_stats_sort', $scope.orderByFields);\n    };\n});\n","CDash.controller('ViewBuildErrorController',\n  function BuildErrorController($scope, $sce, apiLoader) {\n    $scope.loading = true;\n    $scope.pagination = [];\n    $scope.pagination.buildErrors = [];\n    $scope.pagination.currentPage = 1;\n    $scope.pagination.numPerPage = 25;\n    $scope.pagination.maxSize = 5;\n\n    apiLoader.loadPageData($scope, 'api/v1/viewBuildError.php');\n    $scope.finishSetup = function() {\n      $scope.setPage(1);\n    };\n\n    $scope.setPage = function (pageNo) {\n      var begin = ((pageNo - 1) * $scope.pagination.numPerPage),\n          end = begin + $scope.pagination.numPerPage;\n\n        if (end > 0) {\n            $scope.pagination.buildErrors = $scope.cdash.errors.slice(begin, end);\n        } else {\n            $scope.pagination.buildErrors = $scope.cdash.errors;\n        }\n    };\n\n    $scope.pageChanged = function() {\n      $scope.setPage($scope.pagination.currentPage);\n    };\n  }).directive('buildError', function (VERSION) {\n      return {\n          templateUrl: 'build/views/partials/buildError_' + VERSION + '.html'\n      };\n  });\n","CDash.controller('ViewConfigureController',\n  function ViewConfigureController($scope, apiLoader) {\n    apiLoader.loadPageData($scope, 'api/v1/viewConfigure.php');\n});\n","CDash.controller('ViewDynamicAnalysisController',\n  function ViewDynamicAnalysisController($scope, apiLoader) {\n    apiLoader.loadPageData($scope, 'api/v1/viewDynamicAnalysis.php');\n});\n","CDash.controller('ViewDynamicAnalysisFileController',\n  function ViewDynamicAnalysisFileController($scope, apiLoader) {\n    apiLoader.loadPageData($scope, 'api/v1/viewDynamicAnalysisFile.php');\n});\n","function ViewNotesController($scope, $location, anchors, apiLoader) {\n  apiLoader.loadPageData($scope, 'api/v1/viewNotes.php');\n  $scope.finishSetup = function() {\n    // Honor any intra-page anchor specified in the URI.\n    if ($location.hash() != '') {\n    anchors.jumpToAnchor($location.hash());\n    }\n  };\n\n  $scope.gotoNote = function(x) {\n    var newHash = 'note' + x;\n    anchors.jumpToAnchor(newHash);\n  };\n}\n\nCDash.controller('ViewNotesController', ['$scope', '$location', 'anchors', 'apiLoader',\n                                          ViewNotesController]);\n","CDash.controller('ViewProjectsController',\n  function ViewProjectsController($scope, apiLoader) {\n    // Hide filters by default.\n    $scope.showfilters = false;\n    apiLoader.loadPageData($scope, 'api/v1/viewProjects.php');\n});\n","CDash.controller('ViewSubProjectsController',\n  function ViewSubProjectsController($scope, multisort, apiLoader) {\n    // Hide filters by default.\n    $scope.showfilters = false;\n\n    // Check for sort order cookie.\n    var sort_order = [];\n    var sort_cookie_value = $.cookie('cdash_subproject_sort');\n    if(sort_cookie_value) {\n      sort_order = sort_cookie_value.split(\",\");\n    }\n    $scope.sortSubProjects = { orderByFields: sort_order };\n\n    apiLoader.loadPageData($scope, 'api/v1/viewSubProjects.php');\n\n    $scope.updateOrderByFields = function(obj, field, $event) {\n      multisort.updateOrderByFields(obj, field, $event);\n      $.cookie('cdash_subproject_sort', obj.orderByFields);\n    };\n});\n","CDash.controller('ViewTestController',\n  function ViewTestController($scope, $rootScope, $http, $filter, $q, apiLoader, multisort, filters) {\n    $scope.loading = true;\n\n    // Pagination settings.\n    $scope.pagination = [];\n    $scope.pagination.filteredTests = [];\n    $scope.pagination.currentPage = 1;\n    $scope.pagination.maxSize = 5;\n\n    // Check if we have a cookie for number of tests to display.\n    var num_per_page_cookie = $.cookie('viewTest_num_per_page');\n      if(num_per_page_cookie) {\n        $scope.pagination.numPerPage = parseInt(num_per_page_cookie);\n      } else {\n        $scope.pagination.numPerPage = 25;\n      }\n\n    // Hide filters by default.\n    $scope.showfilters = false;\n\n    // Check for filters\n    $rootScope.queryString['filterstring'] = filters.getString();\n\n    // Check for sort order cookie.\n    var sort_order = [];\n    var sort_cookie_value = $.cookie('cdash_view_test_sort');\n    if(sort_cookie_value) {\n      sort_order = sort_cookie_value.split(\",\");\n    } else {\n      // Default sorting : failed tests in alphabetical order.\n      sort_order = ['subprojectname', 'status', 'name'];\n    }\n    $scope.orderByFields = sort_order;\n\n    // Mechanism to cancel the summary/history AJAX query if the user loads another page.\n    $scope.canceler = $q.defer();\n\n    apiLoader.loadPageData($scope, 'api/v1/viewTest.php');\n    $scope.finishSetup = function() {\n      // Check for label filters\n      $scope.cdash.extrafilterurl = filters.getLabelString($scope.cdash.filterdata);\n      $scope.cdash.tests = $filter('orderBy')($scope.cdash.tests, $scope.orderByFields);\n      $scope.setPage(1);\n    };\n\n    $scope.showfilters_toggle = function() {\n      $scope.showfilters = !$scope.showfilters;\n      filters.toggle($scope.showfilters);\n    };\n\n    $scope.setPage = function (pageNo) {\n      var begin = ((pageNo - 1) * $scope.pagination.numPerPage)\n      , end = begin + $scope.pagination.numPerPage;\n      if (end > 0) {\n        $scope.pagination.filteredTests = $scope.cdash.tests.slice(begin, end);\n      } else {\n        $scope.pagination.filteredTests = $scope.cdash.tests;\n      }\n\n      // Load history & summary data for these newly revealed tests (if necessary).\n      var tests_to_load = [];\n      for (var i = 0, len = $scope.pagination.filteredTests.length; i < len; i++) {\n        if ( !('detailsloaded' in $scope.pagination.filteredTests[i]) ) {\n          tests_to_load.push($scope.pagination.filteredTests[i]['name']);\n        }\n      }\n\n      if (tests_to_load.length > 0) {\n        $http({\n          url: 'api/v1/viewTest.php',\n          method: 'GET',\n          params: {\n            'tests[]': tests_to_load,\n            'previous_builds': $scope.cdash.previous_builds,\n            'time_begin': $scope.cdash.time_begin,\n            'time_end': $scope.cdash.time_end,\n            'projectid': $scope.cdash.projectid,\n            'groupid': $scope.cdash.groupid\n          },\n          timeout: $scope.canceler.promise\n        }).then(function success(s) {\n          var response = s.data;\n          $scope.cdash.displayhistory = $scope.cdash.displayhistory || response.displayhistory;\n          $scope.cdash.displaysummary = $scope.cdash.displaysummary || response.displaysummary;\n\n          function copy_test_details(test, response) {\n\n            // Don't display extra data for missing tests\n            if (test['status'] === 'Missing') {\n                return;\n            }\n\n            if ('history' in response) {\n              test['history'] = response['history'];\n              test['historyclass'] = response['historyclass'];\n            }\n            if ('summary' in response) {\n              test['summary'] = response['summary'];\n              test['summaryclass'] = response['summaryclass'];\n            }\n            test['detailsloaded'] = true;\n          }\n\n          // Update our currently displayed filtered results with this new data.\n          for (var i = 0, len1 = response.tests.length; i < len1; i++) {\n            for (var j = 0, len2 = $scope.pagination.filteredTests.length; j < len2; j++) {\n              if (response.tests[i].name === $scope.pagination.filteredTests[j].name) {\n                copy_test_details($scope.pagination.filteredTests[j], response.tests[i]);\n              }\n            }\n          }\n\n          // Also copy this newfound data into the 'master list' of tests.\n          for (var i = 0, len1 = response.tests.length; i < len1; i++) {\n            for (var j = 0, len2 = $scope.cdash.tests.length; j < len2; j++) {\n              if (response.tests[i].name === $scope.cdash.tests[j].name) {\n                copy_test_details($scope.cdash.tests[j], response.tests[i]);\n              }\n            }\n          }\n        });\n      }\n    };\n\n    $scope.pageChanged = function() {\n      $scope.setPage($scope.pagination.currentPage);\n    };\n\n    $scope.updateOrderByFields = function(field, $event) {\n      multisort.updateOrderByFields($scope, field, $event);\n      $scope.cdash.tests = $filter('orderBy')($scope.cdash.tests, $scope.orderByFields);\n      $scope.pageChanged();\n      $.cookie('cdash_view_test_sort', $scope.orderByFields);\n    };\n\n    $scope.sortByExtraMeasurement = function(idx, $event) {\n      var field = 'measurements[' + idx + ']';\n      $scope.updateOrderByFields(field, $event);\n    }\n\n    $scope.numTestsPerPageChanged = function() {\n      $.cookie(\"viewTest_num_per_page\", $scope.pagination.numPerPage, { expires: 365 });\n      $scope.pageChanged();\n    };\n\n    $scope.cancelAjax = function() {\n      $scope.canceler.resolve();\n    }\n});\n","CDash.controller('ViewUpdateController',\n  function ViewUpdateController($scope, $rootScope, $http, apiLoader) {\n    $scope.graphLoaded = false;\n    $scope.graphLoading = false;\n    $scope.showGraph = false;\n    apiLoader.loadPageData($scope, 'api/v1/viewUpdate.php');\n\n    $scope.toggleGraph = function() {\n      $scope.showGraph = !$scope.showGraph;\n      if (!$scope.graphLoaded) {\n        $scope.loadGraph();\n      }\n    };\n\n    $scope.loadGraph = function() {\n      $scope.graphLoading = true;\n      $http({\n        url: 'api/v1/buildUpdateGraph.php',\n        method: 'GET',\n        params: {\n          buildid: $scope.cdash.build.buildid\n        }\n      }).then(function success(s) {\n        $scope.initializeGraph(s.data);\n        $scope.graphLoaded = true;\n        $scope.graphLoading = false;\n      });\n    };\n\n    $scope.initializeGraph = function(input) {\n      var options = {\n        lines: {show: true},\n        points: {show: true},\n        xaxis: {mode: \"time\"},\n        grid: {\n          backgroundColor: \"#fffaff\",\n          clickable: true,\n          hoverable: true,\n          hoverFill: '#444',\n          hoverRadius: 4\n        },\n        selection: {mode: \"x\"},\n        colors: [\"#0000FF\", \"#dba255\", \"#919733\"]\n      };\n\n      $(\"#graph_holder\").bind(\"selected\", function (event, area) {\n        plot = $.plot($(\"#graph_holder\"), [{\n          label: \"Number of changed files\",\n          data: input.data\n        }], $.extend(true, {}, options, {xaxis: {min: area.x1, max: area.x2}}));\n      });\n\n      $(\"#graph_holder\").bind(\"plotclick\", function (e, pos, item) {\n        if (item) {\n          plot.highlight(item.series, item.datapoint);\n          buildid = input.buildids[item.datapoint[0]];\n          window.location = \"buildSummary.php?buildid=\" + buildid;\n        }\n      });\n\n      plot = $.plot($(\"#graph_holder\"), [{label: \"Number of changed files\", data: input.data}], options);\n    };\n})\n\n.directive('updatedFiles', function(VERSION) {\n  return {\n    templateUrl: 'build/views/partials/updatedfiles_' + VERSION + '.html'\n  }\n});\n"]}